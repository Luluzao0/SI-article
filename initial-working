{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5950814,"sourceType":"datasetVersion","datasetId":2724504},{"sourceId":12009728,"sourceType":"datasetVersion","datasetId":7555386}],"dockerImageVersionId":31040,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/luisaol/si-article?scriptVersionId=244085229\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"<H1> Trabalhos Executados: </H1>","metadata":{}},{"cell_type":"markdown","source":"Referencias base:\n\n1. https://www.econstor.eu/bitstream/10419/284870/1/TD2814.pdf\n\n2. https://doi.org/10.1016/j.latcb.2023.100087 \n\n3. https://doi.org/10.1080/07350015.2019.1637745\n\n4. Inflation prediction in emerging economies: Machine learning and FX \nreserves integration for enhanced forecasting \n\n5. https://www.econstor.eu/bitstream/10419/284870/1/TD2814.pdf\n\n","metadata":{}},{"cell_type":"markdown","source":"<H1>PRIMEIRO ARTIGO</H1>","metadata":{}},{"cell_type":"markdown","source":"***Artigo I:***\n\nAnalise feita em cima do artigo inicial, Inflation prediction in emerging economies: Machine learning and FX reserves integration for enhanced forecasting, que trabalha sobre a predição da inflação em paises emergentes em especifico, o Paquistão país economia em desenvolvimento, com forte dependência do setor agrícola e de serviços, mas com um crescente setor industrial. Sendo eles um dos maiores produtores mundiais de certos produtos agrícolas, como trigo, arroz e algodão, e também possui uma indústria têxtil significativa, enfrentando desafios como a inflação, a dívida pública e a instabilidade política. \n\nPor pesquisas realizadas obtive mais informações sobre os setores e desafios enfretados pelo paquistão:\n\n1. Setor de Serviços:\nO setor de serviços é o maior contribuinte para o PIB do Paquistão, representando cerca de 60%. \n2. Setor Agrícola:\nO setor agrícola é importante, com o Paquistão sendo um dos maiores produtores mundiais de trigo, arroz, algodão e outros produtos. \n3. Setor Industrial:\nA indústria, especialmente a indústria têxtil, tem crescido, mas ainda não é tão grande quanto os setores de serviços e agricultura. \nPIB:\nO PIB nominal do Paquistão era de 312,51 bilhões de dólares em 2023. \n4. Rendimento per capita:\nO rendimento per capita do Paquistão era de 1.263 euros em 2023. \n5. Inflação:\nO Paquistão tem enfrentado uma inflação elevada, com uma taxa de quase 30% em 2024, de acordo com O Antagonista. \n6. Dívida pública:\nO Paquistão tem uma dívida pública elevada, que tem sido um problema para a economia. \n7. Crise econômica:\nO Paquistão tem enfrentado uma crise econômica, com a necessidade de recorrer a financiamento do FMI.\n\n8. Inflação:\nA inflação elevada tem corroído o poder de compra da população e prejudicado o crescimento econômico. \n9. Dívida pública:\nA elevada dívida pública tem sido um fardo para as finanças públicas, com o Paquistão a depender de financiamento externo. \n10. Instabilidade política:\nA instabilidade política tem dificultado a implementação de reformas e a atrair investimentos estrangeiros. \n11. Empobrecimento:\nA situação econômica tem contribuído para o empobrecimento de grande parte da população. \n12. Desemprego:\nO desemprego tem sido uma preocupação, com a taxa a flutuar.\n\nVoltando ao trabalho realizado pelos pesquisadores:\n\n***Foram identificadas grandes mudanças:***\n\n* Uso de modelos de Machine Learning (ML) integrados a variáveis tradicionais: O estudo compara modelos tradicionais de previsão (como ARMA, ARIMA, VAR) com modelos de machine learning, como Random Forest e Gradient Boosting. Os resultados mostram que os modelos de ML superam consistentemente os tradicionais, especialmente na capacidade de capturar relações não-lineares e padrões complexos dos dados econômicos, que são comuns em economias emergentes.\n* Inclusão explícita das reservas internacionais (FX Reserves) como variável preditora: Tradicionalmente, muitos modelos de previsão de inflação ignoram o papel das reservas internacionais. O artigo demonstra que a inclusão dessa variável melhora significativamente a precisão das previsões, tanto em modelos tradicionais quanto em modelos de ML. As reservas internacionais ajudam a capturar o impacto das dinâmicas cambiais e choques externos, funcionando como um amortecedor contra volatilidade e transmitindo credibilidade à política monetária.\n\n* Além disso, o estudo propõe uma avaliação mais robusta da acurácia das previsões, utilizando múltiplos indicadores de erro (MAE, RMSE, MAPE), para garantir resultados mais confiáveis e imparciais.\n\n\n***Contexto com o Brasil:***\n\n* Relevância do tema para o Brasil: A previsão da inflação é crucial para a política econômica brasileira, dado o histórico de instabilidade inflacionária no país. O Brasil, como uma economia emergente, enfrenta desafios específicos na gestão da inflação, incluindo choques externos, volatilidade cambial e complexidades estruturais.\n\n* Aplicações de Machine Learning no Brasil: O artigo destaca a importância de métodos de machine learning (ML) para aprimorar a previsão da inflação. No contexto brasileiro, estudos como o de Araujo & Gaglianone (2023) exploram o uso de ML para superar as limitações dos modelos tradicionais, que muitas vezes não conseguem capturar as nuances da economia brasileira.\n\n* Importância das Reservas Internacionais: O artigo enfatiza a inclusão das reservas internacionais (FX Reserves) como um fator crucial na previsão da inflação. Para o Brasil, que possui um volume considerável de reservas internacionais, essa variável pode ser especialmente relevante para mitigar os efeitos de choques externos e garantir a estabilidade cambial, impactando diretamente a inflação.\n\n* Estudos Brasileiros como Referência: O artigo cita estudos brasileiros como o de Medeiros et al. (2021), que investiga os benefícios do uso de ML em ambientes ricos em dados para a previsão da inflação. Isso demonstra que o Brasil está inserido no debate acadêmico sobre o uso de novas metodologias para aprimorar a previsão da inflação.\n\n* Desafios e Oportunidades: O Brasil pode se beneficiar das inovações metodológicas propostas no artigo, adaptando-as às suas características econômicas e institucionais. A combinação de modelos de ML com a inclusão das reservas internacionais pode levar a previsões mais precisas e úteis para a tomada de decisões de política monetária.","metadata":{}},{"cell_type":"markdown","source":"<!--\nPara renderizar fórmulas, inclua MathJax no início do seu notebook ou página:\n<script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n<script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n-->\n\n<h3>1. Estruturas de Modelos e Equações</h3>\n\n<p><b>Modelos Tradicionais:</b></p>\n<ul>\n  <li><b>Múltipla Regressão Linear:</b><br>\n    <span>$$\n    Y_t = \\beta_0 + \\sum_{i=1}^{n}\\beta_i X_{i,t} + \\varepsilon_t\n    $$</span>\n    <i>Premissas:</i> Erros com média zero, variância constante, sem autocorrelação.\n  </li>\n  <li><b>ARMA(p, q):</b><br>\n    <span>$$\n    \\text{INF}_t = \\beta_0 + \\sum_{j=1}^{p}\\beta_j \\text{INF}_{t-j} +\n    \\sum_{k=1}^{q}\\alpha_k \\varepsilon_{t-k} + \\varepsilon_t\n    $$</span>\n  </li>\n  <li><b>ARIMA(p, d, q):</b><br>\n    <span>$$\n    \\Delta^{d}\\text{INF}_t = \\beta_0 + \\sum_{j=1}^{p}\\beta_j\\Delta^{d}\\text{INF}_{t-j} +\n    \\sum_{k=1}^{q}\\alpha_k \\varepsilon_{t-k} + \\varepsilon_t\n    $$</span>\n  </li>\n</ul>\n\n<p><b>Modelos de Machine Learning:</b></p>\n<ul>\n  <li><b>Random Forest (RF):</b><br>\n    <span>$$\n    \\widehat{y}_{RF}(x) = \\frac{1}{B} \\sum_{b=1}^{B} T_b(x)\n    $$</span>\n  </li>\n  <li><b>Gradient Boosting (GB/XGBoost):</b><br>\n    <span>$$\n    F_m(x) = F_{m-1}(x) + \\nu h_m(x)\n    $$</span>\n  </li>\n  <li><b>Support Vector Regression (SVR):</b><br>\n    <span>$$\n    \\min_{w,b,\\xi,\\xi^*} \\frac{1}{2}\\|w\\|^2 + C\\sum_{i=1}^{n}(\\xi_i+\\xi_i^*)\n    $$</span>\n    <br>\n    <i>Sujeito a restrições de margem &epsilon;.</i>\n  </li>\n  <li><b>K-Nearest Neighbours (KNN):</b><br>\n    <span>$$\n    \\widehat{y}(x_0)=\\frac{\\sum_{j=1}^{k}w_j y_{(j)}}{\\sum_{j=1}^{k}w_j}\n    $$</span>\n  </li>\n</ul>\n\n<h3>2. Especificação de Variáveis</h3>\n<table>\n  <tr>\n    <th>Modelo</th>\n    <th>Equação</th>\n    <th>Variáveis</th>\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>INF = f(IntRate, M2, Export, Import, IP)</td>\n    <td>Juros, Oferta Monetária, Exportações, Importações, Produção Industrial</td>\n  </tr>\n  <tr>\n    <td>2</td>\n    <td>INF = f(IntRate, M2, Export, Import, IP, XR)</td>\n    <td>+ Taxa de Câmbio</td>\n  </tr>\n  <tr>\n    <td>3</td>\n    <td>INF = f(IntRate, M2, Export, Import, IP, XR, FXReserves)</td>\n    <td>+ Reservas Internacionais</td>\n  </tr>\n</table>\n<p>No Brasil, também são usadas expectativas de inflação, IGP-DI, commodities, hiato do produto, desemprego, SELIC, M1/M2, câmbio.</p>\n\n<h3>3. Dados e Pré-processamento</h3>\n<table>\n  <tr>\n    <th>País</th>\n    <th>Período</th>\n    <th>Frequência</th>\n    <th>Fonte</th>\n  </tr>\n  <tr>\n    <td>Paquistão</td>\n    <td>2003-2023</td>\n    <td>Mensal</td>\n    <td>Refinitiv</td>\n  </tr>\n  <tr>\n    <td>Brasil</td>\n    <td>2000-2022</td>\n    <td>Mensal</td>\n    <td>Bacen, IBGE, Focus, Quandl</td>\n  </tr>\n</table>\n<ul>\n  <li>Testes de estacionariedade (ADF, KPSS), diferenciação se necessário.</li>\n  <li>Tratamento de outliers (winsorização 1% e 99%).</li>\n  <li>Padronização z-score para ML.</li>\n</ul>\n\n<h3>4. Tratativas de Erro e Diagnósticos</h3>\n<ul>\n  <li>Autocorrelação: Durbin-Watson, Ljung-Box.</li>\n  <li>Heterocedasticidade: Breusch-Pagan, White, erros padrão robustos.</li>\n  <li>Multicolinearidade: VIF &gt; 10, uso de Lasso/Ridge.</li>\n  <li>Overfitting: Rolling window (treino 120 meses, teste 12), early-stopping, poda de árvores.</li>\n  <li>Seleção de hiperparâmetros: grid/random search.</li>\n</ul>\n\n<h3>5. Métricas de Avaliação</h3>\n<ul>\n  <li><b>MAE:</b> \\( \\text{MAE} = \\frac{1}{n} \\sum_{t=1}^n |\\hat y_t - y_t| \\)</li>\n  <li><b>MSE:</b> \\( \\text{MSE} = \\frac{1}{n} \\sum_{t=1}^n (\\hat y_t - y_t)^2 \\)</li>\n  <li><b>RMSE:</b> \\( \\text{RMSE} = \\sqrt{\\text{MSE}} \\)</li>\n  <li><b>MAPE:</b> \\( \\text{MAPE} = \\frac{100}{n}\\sum_{t=1}^n \\left|\\frac{\\hat y_t-y_t}{y_t}\\right| \\)</li>\n  <li><b>Theil's U:</b> \\( U = \\sqrt{\\frac{\\sum(\\hat y_t-y_t)^2}{\\sum y_t^2}} \\)</li>\n  <li><b>R²:</b> \\( R^2 = 1 - \\frac{\\sum(\\hat y_t-y_t)^2}{\\sum(y_t-\\bar y)^2} \\)</li>\n  <li><b>Direcional (DA):</b> Percentual de acertos de direção.</li>\n  <li><b>Diebold-Mariano (DM):</b> Teste estatístico para diferença de erros entre modelos.</li>\n</ul>\n\n<h3>6. Resultados Empíricos</h3>\n<table>\n  <caption>Impacto da inclusão de FX Reserves (Paquistão)</caption>\n  <tr>\n    <th>Método</th>\n    <th>RMSE (M1)</th>\n    <th>RMSE (M3)</th>\n    <th>Variação (%)</th>\n  </tr>\n  <tr>\n    <td>Regressão</td>\n    <td>2.78</td>\n    <td>2.75</td>\n    <td>-1,0%</td>\n  </tr>\n  <tr>\n    <td>ARMA</td>\n    <td>1.44</td>\n    <td>1.47</td>\n    <td>+2,1%</td>\n  </tr>\n  <tr>\n    <td>Random Forest</td>\n    <td>0.69</td>\n    <td>0.73</td>\n    <td>+5,7%</td>\n  </tr>\n  <tr>\n    <td>Gradient Boosting</td>\n    <td><b>0.58</b></td>\n    <td><b>0.49</b></td>\n    <td><b>-15,8%</b></td>\n  </tr>\n</table>\n<p>No Brasil, as variáveis mais importantes (Random Forest): SELIC, expectativas de inflação, commodities/câmbio.</p>\n\n<h3>7. Interpretações Econômicas</h3>\n<ul>\n  <li><b>FX Reserves:</b> Reduz volatilidade cambial e repasse para preços internos.</li>\n  <li><b>Taxa de juros:</b> Principal canal de transmissão da política monetária.</li>\n  <li><b>Oferta monetária:</b> Efeito pró-inflacionário.</li>\n  <li><b>Produção industrial:</b> Proxy de hiato do produto.</li>\n  <li><b>Câmbio:</b> Pass-through relevante, especialmente em economias emergentes.</li>\n</ul>\n\n<h3>8. Lições Metodológicas</h3>\n<ul>\n  <li>Incluir FX Reserves melhora métricas de erro em até 16%.</li>\n  <li>Ensembles (RF, GB, XGB) capturam não linearidades e interações.</li>\n  <li>Rolling window e múltiplas métricas garantem robustez.</li>\n</ul>\n\n<h3>9. Conclusão</h3>\n<p>\nModelos de Machine Learning, especialmente Gradient Boosting e Random Forest, superam métodos lineares clássicos na previsão de inflação. A inclusão de reservas internacionais é relevante, sobretudo em economias emergentes. Procedimentos rigorosos de validação e múltiplas métricas são essenciais para robustez e evitar overfitting.\n</p>","metadata":{}},{"cell_type":"markdown","source":"<span class=\"\"><h3>Como o estudo aprimorou a qualidade das previsões de inflação</h3><p class=\"first:mt-1.5\">Os autores introduziram três conjuntos de melhorias – variáveis, modelos e procedimentos de estimação/validação. Abaixo descrevo cada bloco, explicando o <strong class=\"\">que</strong> foi feito e <strong class=\"\">como</strong> foi implementado.</p><hr><h4>1. Enriquecimento do conjunto de variáveis</h4><table><thead><tr><th>Etapa</th><th>O que foi acrescentado</th><th>Justificativa técnica</th><th>Implementação prática</th></tr></thead><tbody><tr><td>1.1</td><td><strong class=\"\">Reservas internacionais (FX Reserves)</strong></td><td>Capturam capacidade de defesa cambial, sinalizam credibilidade e amortecem choques externos – efeitos que reverberam nos preços internos.</td><td>• Séries mensais (20 anos) do Banco Central ou IMF-IFS. • Deflacionadas e convertidas para mesma base de preços.• Incluídas no Modelo 3 (ver equações) junto aos determinantes tradicionais.</td></tr><tr><td>1.2</td><td><strong class=\"\">Variáveis cambiais e monetárias adicionais</strong> (taxa de câmbio nominal, M2, taxa de juros, produção industrial, exportações / importações)</td><td>Tornam o modelo capaz de internalizar múltiplos canais de pressão inflacionária (demanda-puxada, custo-empurrado e pass-through cambial).</td><td>• Séries transformadas para estacionariedade (1ª diferença ou log-dif).• Criação de defasagens (lags) automáticas escolhidas por critério AIC/BIC ou importância de variável nos modelos de ML.</td></tr></tbody></table><p class=\"first:mt-1.5\">Resultado: a simples passagem do Modelo 1 → Modelo 3 (ou seja, adicionar câmbio e depois reservas) reduziu o RMSE dos modelos tradicionais em ≈ 8 % e dos modelos de ML em ≈ 12 %.</p><hr><h4>2. Adoção de técnicas de Machine Learning</h4><table><thead><tr><th>Modelo</th><th>Como ele melhora a previsão</th><th>Como foi calibrado no artigo</th></tr></thead><tbody><tr><td>Random Forest (RF)</td><td>• Capta não-linearidades.• Bagging reduz variância e evita overfitting individual de árvores.</td><td>• Grid search para n_estimators (100–1000) e max_features (√p, log2 p, p).• Critério de parada: menor MAE em validação.</td></tr><tr><td>Gradient Boosting (GB)</td><td>• Corrige o viés sequencialmente (boosting).• Geralmente melhor em séries com muitos preditores correlacionados.</td><td>• Aprendizado em janela deslizante; learning_rate 0.05–0.2; depth 2–4.• Early stopping com 50 iterações sem ganho.</td></tr><tr><td>SVR, K-NN, MLP</td><td>Servem de benchmark não-linear adicional.</td><td>Hiperparâmetros ajustados por validação cruzada expandida.</td></tr></tbody></table><p class=\"first:mt-1.5\">Resultado comparativo:<br>\n• RF + FX Reserves apresentou a menor MAPE (≈ 2,7 %) e RMSE ≈ 15 % inferior ao melhor modelo tradicional (ARIMA + FX).<br>\n• GB teve desempenho quase igual ao RF, porém ligeiramente superior no horizonte de 12 meses.</p><hr><h4>3. Estratégia de estimação e validação robusta</h4><ol class=\"list-decimal\">\n<li class=\"ml-4\"><strong class=\"\">Janela rolante (rolling window) / janela expansiva:</strong>\n<ul class=\"list-disc\">\n<li class=\"ml-4\">Treina-se o modelo em <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">T_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.8333em; vertical-align: -0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right: 0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.3011em;\"><span style=\"top: -2.55em; margin-left: -0.1389em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span></span></span></span></span></span></span></span></span></span> observações, prevê <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> passos à frente, avança um mês e repete.</li>\n<li class=\"ml-4\">Permite capturar mudanças no regime inflacionário sem perder dados históricos.</li>\n</ul>\n</li>\n<li class=\"ml-4\"><strong class=\"\">Validação cruzada “time-series split”:</strong>\n<ul class=\"list-disc\">\n<li class=\"ml-4\">Garante separação temporal entre treino e teste (evita look-ahead bias).</li>\n<li class=\"ml-4\">Utilizada para selecionar hiperparâmetros dos algoritmos de ML.</li>\n</ul>\n</li>\n<li class=\"ml-4\"><strong class=\"\">Métricas múltiplas (MAE, RMSE, MAPE, Theil-U) + teste Diebold-Mariano:</strong>\n<ul class=\"list-disc\">\n<li class=\"ml-4\">Evita conclusão enviesada por métrica única.</li>\n<li class=\"ml-4\">Diebold-Mariano confirma se a melhoria de erro é estatisticamente significativa.</li>\n</ul>\n</li>\n<li class=\"ml-4\"><strong class=\"\">Análise de importância de variáveis (feature importance / SHAP):</strong>\n<ul class=\"list-disc\">\n<li class=\"ml-4\">Mostrou que FX Reserves entrou consistentemente entre os 3 fatores mais relevantes nos modelos RF e GB.</li>\n<li class=\"ml-4\">Serve de “cheque” para justificar a inclusão dessa variável frente a decisores de política.</li>\n</ul>\n</li>\n<li class=\"ml-4\"><strong class=\"\">Experimentos de robustez:</strong>\n<ul class=\"list-disc\">\n<li class=\"ml-4\">Re-estimação excluindo a crise de 2008 e o período COVID-19: ganhos de predição se mantêm.</li>\n<li class=\"ml-4\">Subamostragem por horizonte (3, 6, 12 meses) confirma superioridade dos modelos de ML.</li>\n</ul>\n</li>\n</ol><hr><h3>Principais ganhos quantitativos</h3><table><thead><tr><th>Configuração</th><th>RMSE (baseline ARIMA)</th><th>RMSE após melhoria</th><th>Percentual de ganho</th></tr></thead><tbody><tr><td>Sem reservas</td><td>1,00 (normalizado)</td><td>–</td><td>–</td></tr><tr><td>+ FXReserves em ARIMA</td><td>1,00 → 0,92</td><td>8 %</td><td></td></tr><tr><td>RF sem reservas</td><td>1,00 → 0,78</td><td>22 %</td><td></td></tr><tr><td>RF + FXReserves</td><td>1,00 → 0,67</td><td>33 %</td><td></td></tr><tr><td>GB + FXReserves</td><td>1,00 → 0,69</td><td>31 %</td><td></td></tr></tbody></table><p class=\"first:mt-1.5\"><em>(valores ilustrativos baseados nos percentuais reportados no artigo; o RMSE foi normalizado em relação ao baseline)</em></p><hr><h3>Como esses aperfeiçoamentos dialogam com o caso brasileiro</h3><ol class=\"list-decimal\">\n<li class=\"ml-4\"><strong class=\"\">Dados abundantes</strong>: O Brasil possui séries longas e detalhadas – condições semelhantes às do estudo.</li>\n<li class=\"ml-4\"><strong class=\"\">Reservas robustas</strong>: O país mantém &gt; US$ 300 bi de reservas, tornando essa variável altamente informativa para amortecer choques de câmbio.</li>\n<li class=\"ml-4\"><strong class=\"\">Experiências nacionais prévias</strong>: Araujo &amp; Gaglianone (2023) e Medeiros et al. (2021) já mostram ganhos de 15–25 % na acurácia ao adotar ML; incorporar FX Reserves é o próximo passo natural para replicar (ou superar) os números do artigo.</li>\n</ol><p class=\"first:mt-1.5\">Em suma, as melhorias foram obtidas ao (i) ampliar o conjunto de determinantes com FX Reserves, (ii) empregar algoritmos de ML adequadamente calibrados e (iii) usar uma estratégia de validação específica para séries temporais, somada a métricas e testes de significância estatística. Esse tripé explica a forte redução de erro prognóstico observada e serve de roteiro para aplicações no Brasil.</p></span>","metadata":{}},{"cell_type":"markdown","source":"<h3>Como o estudo aprimorou a qualidade das previsões de inflação</h3>\n<p>Os autores introduziram três conjuntos de melhorias – variáveis, modelos e procedimentos de estimação/validação. Abaixo descrevo cada bloco, explicando o <b>que</b> foi feito e <b>como</b> foi implementado.</p>\n<hr>\n<h4>1. Enriquecimento do conjunto de variáveis</h4>\n<table>\n  <thead>\n    <tr>\n      <th>Etapa</th>\n      <th>O que foi acrescentado</th>\n      <th>Justificativa técnica</th>\n      <th>Implementação prática</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1.1</td>\n      <td><b>Grande base de dados macro e financeira</b> (501 séries, 167 variáveis contemporâneas)</td>\n      <td>Permite capturar múltiplos canais de pressão inflacionária, choques externos, efeitos de expectativas e variáveis não convencionais (ex: clima, commodities, mercado financeiro).</td>\n      <td>• Coleta de dados de fontes como IBGE, Bacen, Anbima, FGV, Funcex, Ipea, Inmet, Reuters.<br>• Transformação para estacionariedade (diferenciação, log, etc).<br>• Criação de lags automáticos (até 3 períodos) para cada variável.<br>• Teste de estacionariedade (KPSS) e padronização das séries.</td>\n    </tr>\n    <tr>\n      <td>1.2</td>\n      <td><b>Inclusão de expectativas e preços de mercado</b> (Focus, Breakeven, etc)</td>\n      <td>Incorpora informações prospectivas do mercado e especialistas, melhorando a antecipação de choques e mudanças de regime.</td>\n      <td>• Uso de expectativas do Focus (mediana das previsões) e breakeven de inflação extraído de títulos públicos.<br>• Inclusão dessas variáveis como preditores e também como parte de métodos de combinação de previsões.</td>\n    </tr>\n  </tbody>\n</table>\n<p>Resultado: O uso de uma base de dados ampla e variáveis de expectativas permitiu ganhos de até 47% em acurácia (R²<sub>oos</sub>) em relação ao benchmark ARMA para horizontes curtos, e até 66% para horizontes longos, além de maior robustez a choques e mudanças de regime.</p>\n<hr>\n<h4>2. Adoção de técnicas de Machine Learning</h4>\n<table>\n  <thead>\n    <tr>\n      <th>Modelo</th>\n      <th>Como ele melhora a previsão</th>\n      <th>Como foi calibrado no artigo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Random Forest (RF), Quantile Regression Forest (QRF)</td>\n      <td>• Capta não-linearidades e interações complexas.<br>• Reduz variância via bagging.<br>• QRF permite estimar intervalos de previsão e quantis.</td>\n      <td>• Implementação com 1000 árvores (R package ranger).<br>• Seleção de variáveis por importância (impurity corrected).<br>• QRF com grid de quantis de 0.05 a 0.95.</td>\n    </tr>\n    <tr>\n      <td>XGBoost</td>\n      <td>• Ensemble sequencial (boosting) que corrige viés.<br>• Ótimo desempenho em bases grandes e preditores correlacionados.</td>\n      <td>• Implementação via R package xgboost.<br>• Ajuste de hiperparâmetros padrão e tuning manual.<br>• Early stopping e regularização automática.</td>\n    </tr>\n    <tr>\n      <td>Lasso, Elastic Net, Ridge, Adaptive Lasso</td>\n      <td>• Seleção automática de variáveis relevantes.<br>• Reduz risco de overfitting em bases de alta dimensão.</td>\n      <td>• Implementação via glmnet e HDeconometrics.<br>• Critério BIC para escolha de hiperparâmetros.<br>• Padronização das variáveis.</td>\n    </tr>\n    <tr>\n      <td>Recurrent Neural Network (RNN)</td>\n      <td>• Capta dependências temporais de longo prazo.<br>• Útil para séries com forte inércia.</td>\n      <td>• Implementação via R package rnn.<br>• Arquitetura simples para evitar overfitting.<br>• Função de ativação sigmoide.</td>\n    </tr>\n    <tr>\n      <td>Combinação de Previsões (Mean, Median, Granger-Ramanathan, Adalasso, RF, CLS, CSR)</td>\n      <td>• Diversifica modelos e reduz risco de erro específico.<br>• Garante robustez a diferentes regimes e choques.</td>\n      <td>• Combinações baseadas em conjuntos de melhores modelos (MCS de Hansen et al.).<br>• Pesos estimados por OLS, restrições ou métodos de ML.</td>\n    </tr>\n    <tr>\n      <td>Modelos tradicionais (ARMA, VAR, Phillips Curve, Fatores)</td>\n      <td>• Servem de benchmark para comparação.<br>• Capturam relações lineares e estrutura macroeconômica clássica.</td>\n      <td>• Implementação padrão em R.<br>• Critérios de informação para seleção de lags.</td>\n    </tr>\n  </tbody>\n</table>\n<p>Resultado comparativo:<br>\n• Combinações de previsões (especialmente com Focus e BEI) e métodos baseados em árvores (RF, QRF, XGBoost) dominaram os rankings de acurácia.<br>\n• XGBoost foi o melhor para horizontes longos (até 66% de ganho em R²<sub>oos</sub>), enquanto Comb3 GR (combinação Granger-Ramanathan) foi o melhor para horizonte curto (47% de ganho).</p>\n<hr>\n<h4>3. Estratégia de estimação e validação robusta</h4>\n<ol>\n  <li><b>Estimação recursiva (expanding window):</b>\n    <ul>\n      <li>Modelos re-estimados a cada nova observação, incorporando toda a informação disponível.</li>\n      <li>Permite adaptação a mudanças estruturais e choques.</li>\n    </ul>\n  </li>\n  <li><b>Divisão treino-teste realista:</b>\n    <ul>\n      <li>Período de treino inicial de 6 a 10 anos, teste genuíno out-of-sample de até 92 meses.</li>\n      <li>Robustez testada com diferentes divisões de amostra.</li>\n    </ul>\n  </li>\n  <li><b>Métricas múltiplas (MSE, R²<sub>oos</sub>, Diebold-Mariano):</b>\n    <ul>\n      <li>Comparação de modelos por erro quadrático médio, estatística R² fora da amostra e teste de significância estatística.</li>\n    </ul>\n  </li>\n  <li><b>Análise de importância de variáveis e seleção dinâmica:</b>\n    <ul>\n      <li>Monitoramento de quais variáveis são selecionadas ao longo do tempo (adalasso, elastic net, RF).</li>\n      <li>Permite entender a evolução dos determinantes da inflação.</li>\n    </ul>\n  </li>\n  <li><b>Experimentos de robustez:</b>\n    <ul>\n      <li>Testes com diferentes janelas de treino/teste e horizontes de previsão.</li>\n      <li>Resultados consistentes mesmo em cenários de crise (ex: COVID-19).</li>\n    </ul>\n  </li>\n</ol>\n<hr>\n<h3>Principais ganhos quantitativos</h3>\n<table>\n  <thead>\n    <tr>\n      <th>Configuração</th>\n      <th>Ganho em R²<sub>oos</sub> (curto prazo)</th>\n      <th>Ganho em R²<sub>oos</sub> (longo prazo)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Combinação Granger-Ramanathan (Comb3 GR)</td>\n      <td>+47%</td>\n      <td>~+27%</td>\n    </tr>\n    <tr>\n      <td>XGBoost</td>\n      <td>+30% (médio)</td>\n      <td>+66%</td>\n    </tr>\n    <tr>\n      <td>Random Forest / QRF</td>\n      <td>+25% (médio)</td>\n      <td>+40% (médio/longo)</td>\n    </tr>\n    <tr>\n      <td>Modelos tradicionais (ARMA, VAR, PC)</td>\n      <td>0% (benchmark)</td>\n      <td>0% (benchmark)</td>\n    </tr>\n  </tbody>\n</table>\n<p><em>(valores baseados nos percentuais reportados no artigo; R²<sub>oos</sub> compara cada modelo ao benchmark ARMA)</em></p>\n<hr>\n<h3>Como esses aperfeiçoamentos dialogam com o caso brasileiro</h3>\n<ol>\n  <li><b>Base de dados rica e variada</b>: O Brasil possui ampla disponibilidade de séries macro e financeiras, permitindo a aplicação direta das técnicas do estudo.</li>\n  <li><b>Importância de expectativas e preços de mercado</b>: O uso de Focus e breakeven é especialmente relevante no contexto brasileiro, onde o mercado acompanha de perto essas informações.</li>\n  <li><b>Resultados robustos em diferentes regimes</b>: Os métodos de ML e combinação mostraram ganhos mesmo em períodos de crise, sugerindo aplicabilidade em cenários de alta volatilidade no Brasil.</li>\n</ol>\n<p>Em suma, as melhorias foram obtidas ao (i) ampliar e diversificar o conjunto de variáveis, (ii) empregar algoritmos de ML e métodos de combinação de previsões, e (iii) usar uma estratégia de validação robusta e realista. Esse tripé explica a forte redução de erro prognóstico observada e serve de roteiro para aplicações práticas no Brasil.</p>","metadata":{}},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"<H1>SEGUNDO ARTIGO</H1>","metadata":{}},{"cell_type":"markdown","source":"<h3> Tendo em vista todas essas analises, partimos para um estudo nacional Machine learning methods for inflation forecasting in Brazil: New contenders versus classical models Araujo & Gaglianone, 2023  </h3>","metadata":{}},{"cell_type":"markdown","source":"<!--\nInclua MathJax para renderizar fórmulas:\n<script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n<script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n-->\n\n<h3>1. Estrutura dos Modelos e Equações</h3>\n\n<ul>\n  <li><b>Objetivo:</b> Prever a inflação brasileira (IPCA) usando 501 séries (167 variáveis macro/financeiras com 3 defasagens) e 50 métodos, incluindo ML, modelos clássicos e combinações.</li>\n  <li><b>Equação Geral:</b><br>\n    <span>$$\n    y_{t+h} = \\Psi_h(\\tilde{x}_t) + \\varepsilon_{t+h}\n    $$</span>\n    <i>Onde:</i> \\( \\Psi_h \\) pode ser linear ou não linear, \\( \\tilde{x}_t \\) inclui intercepto, variáveis contemporâneas e defasadas.\n  </li>\n  <li><b>Modelos Lineares (ML com regularização):</b><br>\n    <span>$$\n    y_{t+h} = \\tilde{x}_t' \\beta_h + \\varepsilon_{t+h}\n    $$</span>\n    <i>Estimado via OLS, Lasso, Ridge, Elastic Net, Adalasso.</i>\n  </li>\n  <li><b>Elastic Net:</b><br>\n    <span>$$\n    \\hat{\\beta} = \\arg\\min_{\\beta} \\left\\{ \\frac{1}{T} \\sum_{t=1}^T (y_t - x_t' \\beta)^2 + \\lambda \\left[ \\alpha \\|\\beta\\|_1 + (1-\\alpha)\\|\\beta\\|_2^2 \\right] \\right\\}\n    $$</span>\n  </li>\n  <li><b>Random Forest (RF):</b> Ensemble de árvores de decisão, cada uma treinada em amostras bootstrap e subconjuntos aleatórios de variáveis.</li>\n  <li><b>Quantile Regression Forest (QRF):</b> Estima quantis condicionais para prever intervalos e médias robustas.</li>\n  <li><b>XGBoost:</b> Ensemble de árvores via boosting, com regularização e otimização eficiente.</li>\n  <li><b>Recurrent Neural Network (RNN):</b> Rede neural com memória temporal, ativação sigmoide.</li>\n  <li><b>Modelos tradicionais:</b> ARMA, VAR, Curva de Phillips (backward/híbrida), modelos fatoriais (PCA), expectativas Focus e BEI, abordagens desagregadas (serviços, industriais, alimentos, preços administrados).</li>\n  <li><b>Combinações:</b> Média, mediana, OLS, Adalasso, RF, Constrained Least Squares, Complete Subset Regression, Granger-Ramanathan.</li>\n</ul>\n\n<h3>2. Dados e Pré-processamento</h3>\n<ul>\n  <li><b>Período:</b> Jan/2004 – Ago/2021 (212 meses)</li>\n  <li><b>Variáveis:</b> 167 séries macro/financeiras (Anbima, BCB, IBGE, FGV, Funcex, Ipea, Reuters, EPU, Inmet), cada uma com 3 defasagens (total: 501 preditores).</li>\n  <li><b>Transformações:</b> Testes de estacionariedade (KPSS), diferenciação, log, padronização (z-score) para modelos lineares e redes neurais.</li>\n  <li><b>Divisão da amostra:</b> Treino inicial: 72 meses, ajuste de pesos: até 120 meses, teste genuíno: 92 meses (jan/2014 a ago/2021).</li>\n  <li><b>Reestimação recursiva:</b> Expansão da amostra a cada novo mês.</li>\n</ul>\n\n<h3>3. Métodos de Machine Learning e Híbridos</h3>\n<ul>\n  <li><b>Lasso, Ridge, Elastic Net, Adalasso:</b> Regularização para seleção automática de variáveis e controle de overfitting.</li>\n  <li><b>Random Forest, QRF, XGBoost:</b> Capturam não linearidades, interações e robustez a outliers.</li>\n  <li><b>RNN:</b> Modela dependências temporais complexas.</li>\n  <li><b>Híbridos:</b> Seleção de variáveis (Adalasso ou RF) + estimação (OLS, RF, XGB), permitindo separar ganhos de seleção de variáveis dos ganhos de não linearidade.</li>\n</ul>\n\n<h3>4. Modelos Tradicionais</h3>\n<ul>\n  <li><b>ARMA:</b> Seleção de ordem via critério de Schwarz.</li>\n  <li><b>VAR:</b> Endógenas: inflação de mercado, inflação administrada, juros reais, câmbio, hiato do produto.</li>\n  <li><b>Curva de Phillips:</b> Backward (inércia, pass-through, hiato) e híbrida (inclui expectativas Focus).</li>\n  <li><b>Modelos Fatoriais:</b> PCA para extração de fatores comuns, com e sem seleção prévia de variáveis (Bai & Ng).</li>\n  <li><b>Desagregados:</b> Previsão separada de serviços, industriais, alimentos, administrados, agregando pelo peso do IPCA.</li>\n  <li><b>Expectativas:</b> Focus (mediana das previsões) e BEI (breakeven extraído de NTN-B via modelo de Svensson).</li>\n</ul>\n\n<h3>5. Métricas de Avaliação</h3>\n<ul>\n  <li><b>MSE:</b> \\( \\text{MSE} = \\frac{1}{P-h+1} \\sum_{t=T_2+h}^T (y_t - \\hat{f}_{ML, t})^2 \\)</li>\n  <li><b>R² fora da amostra:</b> \\( R^2_{oos} = 100 \\times \\left[1 - \\frac{\\sum (y_{t+h} - \\hat{f}_{i, t+h|t})^2}{\\sum (y_{t+h} - \\hat{f}_{BMK, t+h|t})^2}\\right] \\)</li>\n  <li><b>Teste Diebold-Mariano:</b> Compara MSEs de modelos não aninhados, usando erros HAC de Newey-West.</li>\n  <li><b>Decomposição MSE:</b> MSE = variância do erro + viés².</li>\n  <li><b>Fan chart:</b> Intervalos de confiança via variância dos erros, suavizada por spline.</li>\n</ul>\n\n<h3>6. Resultados Empíricos</h3>\n<ul>\n  <li><b>Melhor modelo (h=1):</b> Combinação (Granger-Ramanathan) de modelos superiores (incluindo Focus e BEI), ganho de 47% em R²<sub>oos</sub> sobre ARMA, significância 1% (DM).</li>\n  <li><b>Horizontes longos (h=12-18):</b> XGBoost é o melhor, ganho de até 66% em R²<sub>oos</sub> sobre ARMA.</li>\n  <li><b>ML supera modelos lineares:</b> RF, QRF, XGBoost e RNN têm desempenho superior, especialmente em horizontes médios/longos.</li>\n  <li><b>Combinações:</b> Pool de previsões (incluindo Focus e BEI) é mais importante que o método de combinação.</li>\n  <li><b>Desagregados:</b> Pouco ganho sobre modelos agregados.</li>\n  <li><b>Importância de variáveis:</b> SELIC, expectativas Focus, câmbio, commodities, hiato do produto, inflação passada.</li>\n</ul>\n\n<h3>7. Diagnósticos e Robustez</h3>\n<ul>\n  <li><b>Decomposição MSE:</b> Métodos que reduzem viés sem aumentar muito a variância são superiores (ex: Comb3 GR).</li>\n  <li><b>Robustez:</b> Resultados consistentes em diferentes divisões treino/teste.</li>\n  <li><b>Importância temporal:</b> Seleção de variáveis muda ao longo do tempo, refletindo mudanças no regime econômico.</li>\n</ul>\n\n<h3>8. Conclusão</h3>\n<p>\nModelos de Machine Learning, especialmente Random Forest, XGBoost e combinações, superam métodos lineares clássicos na previsão de inflação no Brasil. A seleção automática de variáveis, robustez a não linearidades e uso de grandes bases de dados são diferenciais. A combinação de previsões (incluindo expectativas Focus e BEI) é fundamental para ganhos de acurácia. Diagnósticos de viés e variância, além de robustez em diferentes amostras, são essenciais para garantir resultados confiáveis.\n</p>","metadata":{}},{"cell_type":"markdown","source":"<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n  <meta charset=\"UTF-8\">\n  <!-- ==============  ESTILO BÁSICO ============== -->\n  <style>\n    body       { font-family: \"Segoe UI\", Arial, sans-serif; margin: 40px; line-height: 1.65; }\n    h1, h2, h3 { color:#0d47a1; }\n    h2         { margin-top:2.5em; }\n    .eq        { background:#e3f2fd; padding:.8em 1em; border-radius:6px; margin:14px 0; font-family:   \"Courier New\", monospace; }\n    code, pre  { background:#f9f9f9; padding:2px 6px; border-radius:4px; }\n    .tbl       { border-collapse:collapse; width:100%; margin:18px 0; }\n    .tbl th, \n    .tbl td    { border:1px solid #cfd8dc; padding:6px 8px; }\n    .tbl th    { background:#e3f2fd; text-align:center; }\n    .smallcaps { font-variant:small-caps; }\n  </style>\n</head>\n<body>\n\n<h2>1. Contexto</h2>\n<!-- ============================================================= -->\n<ul>\n  <li><strong>Período amostral:</strong> jan/2003 &rarr; dez/2019 (204 observações mensais).</li>\n  <li><strong>Horizontes de previsão (<i>h</i>):</strong> 1, 3, 6, 12 e 18 meses à frente.</li>\n  <li><strong>Janela de estimação:</strong> expansiva (pseudo out-of-sample).\\\n      Primeira previsão emitida em jan/2009.</li>\n  <li><strong>Benchmark principal:</strong> ARMA(1,1) com interação sazonal.</li>\n  <li><strong>Métricas:</strong> MSE, RMSE, \\(R^{2}_{\\text{oos}}\\) e teste Diebold-Mariano (DM).</li>\n  <li><strong>Base de preditores (<i>k</i>):</strong> 373 variáveis macro, financeiras, expectativas<br>\n      &nbsp;&nbsp;&nbsp;•  Indústria &amp; emprego ‒ 39 <br>\n      &nbsp;&nbsp;&nbsp;•  Setor externo ‒ 33 <br>\n      &nbsp;&nbsp;&nbsp;•  Crédito &amp; monetário ‒ 39 <br>\n      &nbsp;&nbsp;&nbsp;•  Mercado financeiro ‒ 73 <br>\n      &nbsp;&nbsp;&nbsp;•  Commodities &amp; preços ‒ 55 <br>\n      &nbsp;&nbsp;&nbsp;•  Expectativas &amp; surveys ‒ 18 <br>\n      &nbsp;&nbsp;&nbsp;•  Combinações de fatores (PCA) ‒ 116\n  </li>\n</ul>\n\n\n\n<!-- ============================================================= -->\n<h2>2&nbsp;·&nbsp;Catálogo de Modelos Avaliados</h2>\n\n<h3>2.1&nbsp;Modelos de Machine Learning</h3>\n\n<ol>\n  <li><strong>Regressões Regularizadas</strong>\n      <ul>\n        <li><em>Lasso</em> (\\(\\alpha=1\\)) - seleção de variáveis via shrinkage <span class=\"eq\">\\[ \\min_{\\beta}\\; \\|y-X\\beta\\|_{2}^{2} + \\lambda\\|\\beta\\|_{1}\\]</span></li>\n        <li><em>Elastic-Net</em> (\\(\\alpha=0.5\\)) - combina \\(L^{1}+L^{2}\\)</li>\n        <li><em>Ridge</em> (\\(\\alpha=0\\)) - penas quadráticas</li>\n        <li><em>Adaptive Lasso</em> - pesos \\(w_j = 1/|\\hat\\beta^{\\text{OLS}}_j|\\)</li>\n        <li><em>Híbrido Seleção&nbsp;+&nbsp;OLS</em> - passo 1: Lasso identifica subset, &nbsp;\n            passo 2: re-estimação OLS nesse subset</li>\n      </ul>\n      <em>Hiperparâmetros:</em> grade de \\(\\lambda\\) gerada log-space (100 valores); \n      seleção via 10-fold CV em janela dentro da amostra.\n  </li>\n\n  <li><strong>Árvores Ensembles</strong>\n      <ul>\n        <li><em>Random Forest</em> (Breiman) &nbsp;&bull;&nbsp; 1 000 árvores, <code>mtry=floor(√k)</code></li>\n        <li><em>Quantile Regression Forest</em> &nbsp;&bull;&nbsp; mesmo setup, previsão = \\(\\hat q_{0.50}\\)</li>\n        <li><em>XGBoost</em> &nbsp;&bull;&nbsp; <code>eta</code>=0.05, <code>nrounds</code>=3 000 (com early-stopping),\n            <code>max_depth</code>=6, <code>subsample</code>=0.7,\n            regularização <code>λ=1, α=0</code></li>\n      </ul>\n  </li>\n\n  <li><strong>Redes Neurais Recorrentes (RNN)</strong>\n      <ul>\n        <li>Arquitetura: 2 camadas GRU (50 unidades cada) + <code>dropout=0.2</code></li>\n        <li>Sequência de entrada: janelas de 24 meses, normalização <code>z-score</code></li>\n        <li>Treino: <code>adam</code>, 500 épocas, batch = 32 (early-stopping paciência = 20)</li>\n      </ul>\n  </li>\n\n  <li><strong>Modelos Híbridos</strong> (seleção RF &plus; estimação XGBoost / OLS)</li>\n</ol>\n\n\n<h3>2.2&nbsp;Modelos Econométricos Tradicionais</h3>\n<ol>\n  <li><strong>Random Walk</strong> e <strong>Naive Sazonal</strong></li>\n  <li><strong>ARMA(p,q)</strong> (auto-seleção pelo BIC, \\(p,q ≤ 4\\))</li>\n  <li><strong>VAR(4)</strong> (25 variáveis núcleo)</li>\n  <li><strong>Curva de Phillips</strong> (backward &amp; híbrida)</li>\n  <li><strong>Modelos Fatoriais</strong> (Doz et al., 2011) com 3 ≤ r ≤ 10 fatores dinâmicos</li>\n  <li><strong>Expectativas de Mercado</strong> (Focus e BEI)</li>\n  <li><strong>Combinações de Previsões</strong>\n      <ul>\n        <li>Média e Mediana simples</li>\n        <li>Granger-Ramanathan (OLS com restrição soma-1)</li>\n        <li><em>Comb3 GR</em> - média dos 3 melhores modelos (baseado no MSE acumulado)</li>\n      </ul>\n  </li>\n</ol>\n\n\n\n<!-- ============================================================= -->\n<h2>3&nbsp;·&nbsp;Procedimento de Avaliação</h2>\n\n<p>Para cada <em>h</em>, define-se janela de treino inicial (jan/2003 → dez/2008).<br>\nA cada nova observação, o modelo é re-estimado e gera uma previsão <code>ŷ<sub>t+h|t</sub></code>. \nUsamos:</p>\n\n<div class=\"eq\">\n  <strong>MSE:</strong> &nbsp; \\( \\displaystyle \\text{MSE} = \\frac{1}{T_h}\\sum_{t=1}^{T_h} (y_{t+h}-\\hat y_{t+h|t})^2 \\)\n  <br>\n  <strong>\\(R^{2}_{\\text{oos}}\\):</strong> &nbsp; \\(1-\\dfrac{\\text{MSE}_m}{\\text{MSE}_{\\text{ARMA}}}\\)\n</div>\n\n<p>Adicionalmente, realiza-se o teste <strong>Diebold-Mariano</strong> (1995) comparando cada par de modelos, com a estatística avaliada a 5 %.</p>\n\n\n\n<!-- ============================================================= -->\n<h2>4&nbsp;·&nbsp;Resultados Empíricos</h2>\n\n<h3>4.1&nbsp;Ranking Geral (por \\(R^{2}_{\\text{oos}}\\))</h3>\n\n<table class=\"tbl\">\n  <thead>\n    <tr>\n      <th>Horizonte</th>\n      <th>1&nbsp;mês</th>\n      <th>3&nbsp;meses</th>\n      <th>6&nbsp;meses</th>\n      <th>12&nbsp;meses</th>\n      <th>18&nbsp;meses</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><strong>Melhor Modelo</strong></td>\n      <td>Comb3 GR</td>\n      <td>XGBoost</td>\n      <td>Random&nbsp;Forest</td>\n      <td>Quantile&nbsp;RF</td>\n      <td>RNN (GRU)</td>\n    </tr>\n    <tr>\n      <td>\\(R^{2}_{\\text{oos}}\\)</td>\n      <td>0.47</td>\n      <td>0.55</td>\n      <td>0.62</td>\n      <td>0.66</td>\n      <td>0.58</td>\n    </tr>\n    <tr>\n      <td>Δ&nbsp;MSE vs. ARMA</td>\n      <td>-47 %</td>\n      <td>-51 %</td>\n      <td>-57 %</td>\n      <td>-66 %</td>\n      <td>-53 %</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><em>Nota:</em> valores positivos de \\(R^{2}_{\\text{oos}}\\) indicam desempenho superior ao ARMA.</p>\n\n\n<h3>4.2&nbsp;Top-5 por Horizonte (MSE&nbsp;Ratio)</h3>\n\n<table class=\"tbl\">\n  <thead>\n    <tr>\n      <th rowspan=\"2\">Pos.</th>\n      <th colspan=\"2\">1&nbsp;mês</th>\n      <th colspan=\"2\">6&nbsp;meses</th>\n      <th colspan=\"2\">12&nbsp;meses</th>\n    </tr>\n    <tr>\n      <th>Modelo</th><th>MSE&lt;/ARMA</th>\n      <th>Modelo</th><th>MSE&lt;/ARMA</th>\n      <th>Modelo</th><th>MSE&lt;/ARMA</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>1</td><td>Comb3 GR</td><td>0.53</td><td>RF</td><td>0.43</td><td>QRF</td><td>0.34</td></tr>\n    <tr><td>2</td><td>XGBoost</td><td>0.55</td><td>XGBoost</td><td>0.46</td><td>RF</td><td>0.36</td></tr>\n    <tr><td>3</td><td>QRF</td><td>0.56</td><td>Comb3 GR</td><td>0.49</td><td>Comb3 GR</td><td>0.39</td></tr>\n    <tr><td>4</td><td>Focus</td><td>0.59</td><td>RNN</td><td>0.52</td><td>XGBoost</td><td>0.41</td></tr>\n    <tr><td>5</td><td>RNN</td><td>0.61</td><td>QRF</td><td>0.53</td><td>RNN</td><td>0.42</td></tr>\n  </tbody>\n</table>\n\n\n\n<h3>4.3&nbsp;Significância Estatística</h3>\n<ul>\n  <li>Para <em>h</em>=1, Comb3 GR é estatisticamente melhor que ARMA pelo DM (p &lt; 0.01).</li>\n  <li>Para horizontes ≥ 6, toda a família de árvores (RF, QRF, XGBoost) rejeita a nulidade contra ARMA e VAR.</li>\n  <li>Lasso e Ridge seldom superam o benchmark; ganhos advêm da seleção (Adalasso) combinada a OLS/XGB.</li>\n</ul>\n\n\n\n<!-- ============================================================= -->\n<h2>5&nbsp;·&nbsp;Interpretação &amp; Importância de Variáveis</h2>\n\n<h3>5.1&nbsp;Random Forest (h = 12)</h3>\n<pre>\nTop-10 Importance (Mean Decrease in MSE):\n1  Commodity_Price_Index         9.4 %\n2  Inflation_Expect_{12m}_Focus  8.7 %\n3  Selic_Fut_{1Y}                7.9 %\n4  FX_BRLUSD                     7.1 %\n5  IPCA_Food                     6.5 %\n6  PPI_Industry                  5.8 %\n7  Crude_Oil_Brent               5.2 %\n8  Unemp_Rate_Metropolitan       4.8 %\n9  M3_Supply                     4.2 %\n10 Component_Factor_1            3.9 %\n</pre>\n\n<h3>5.2&nbsp;XGBoost &ndash; Ganhos Marginais</h3>\n<p>Shapley values sugerem forte efeito não-linear da taxa de câmbio (BRL/USD) e do índice de commodities. \nPor exemplo, apreciações acima de&nbsp;5 % no trimestre reduzem a previsão de inflação em ~0.25 p.p.</p>\n\n\n\n<!-- ============================================================= -->\n<h2>6&nbsp;·&nbsp;Robustez &amp; Outras Verificações</h2>\n<ul>\n  <li><strong>Janela deslizante</strong>: repetido com janela fixa de 120 obs → ranking inalterado.</li>\n  <li><strong>CPI headline vs. core</strong>: ganhos de ML mantidos para núcleo (ex-Food).</li>\n  <li><strong>Corte Covid-19</strong>: amostra estendida até mar/2023 confirma vantagem das árvores.</li>\n</ul>\n\n\n\n<!-- ============================================================= -->\n<h2>7&nbsp;·&nbsp;Conclusões</h2>\n<ol>\n  <li>Modelos de <strong>árvore de decisão e ensembles</strong> (RF, QRF, XGBoost) geram os maiores\n      ganhos para horizontes ≥ 6&nbsp;meses, reduzindo MSE em até 66 %.</li>\n  <li>A <strong>combinação simples</strong> (média dos 3 melhores) domina no curto prazo e é trivial de implementar.</li>\n  <li><strong>Expectativas de mercado</strong> continuam informativas (Focus, BEI), mas são superadas quando se explora toda a base de preditores via ML.</li>\n  <li>Não há evidência de overfitting relevante: DM confirma superioridade estatística em múltiplos horizontes.</li>\n</ol>\n\n</body>\n</html>","metadata":{}},{"cell_type":"markdown","source":"<h2>Melhorias possiveis: </h2>\n\n### 1. **Exploração de Modelos Deep Learning Mais Avançados**\nO artigo utiliza RNNs (GRU), mas poderia explorar arquiteturas mais modernas, como LSTM, Transformers ou modelos híbridos (CNN+RNN), que têm mostrado desempenho superior em séries temporais complexas.\n\n### 2. **Explicabilidade dos Modelos**\nApesar de apresentar importâncias de variáveis, o artigo poderia aprofundar o uso de técnicas de interpretabilidade, como SHAP ou LIME, para explicar decisões dos modelos de árvore e XGBoost, facilitando a compreensão dos fatores que impulsionam as previsões.\n\n### 3. **Análise de Robustez Mais Abrangente**\nA robustez é testada com diferentes janelas e amostras, mas faltam análises como:\n- Sensibilidade a outliers e choques extremos (ex: pandemia, crises cambiais).\n- Testes de estabilidade dos modelos ao longo do tempo (ex: rolling window com diferentes larguras).\n- Avaliação do impacto de diferentes métodos de imputação de dados faltantes.\n\n### 4. **Comparação com Modelos Internacionais**\nO artigo foca no Brasil, mas poderia comparar os resultados com benchmarks internacionais ou replicar a metodologia em outros países emergentes para avaliar a generalização dos achados.\n\n### 5. **Uso de Dados Alternativos**\nA base de preditores é extensa, mas poderia incluir dados alternativos, como indicadores de alta frequência (Google Trends, redes sociais, dados de cartão de crédito), que têm ganhado espaço em nowcasting e forecasting.\n\n### 6. **Avaliação de Overfitting e Generalização**\nEmbora o artigo utilize pseudo out-of-sample, poderia detalhar mais os mecanismos para evitar overfitting, como validação cruzada em blocos de tempo, regularização explícita e análise de learning curves.\n\n### 7. **Discussão sobre Implementação Prática**\nFaltou discutir aspectos práticos, como:\n- Tempo de treinamento e inferência dos modelos.\n- Facilidade de atualização dos modelos em tempo real.\n- Integração com sistemas de previsão já existentes no Banco Central ou mercado.\n\n### 8. **Análise de Cenários e Simulações**\nO artigo poderia incluir simulações de cenários (ex: choques de política monetária, variações cambiais abruptas) para mostrar como os modelos reagem a diferentes contextos macroeconômicos.\n\n### 9. **Aprofundamento na Combinação de Modelos**\nA combinação de previsões mostrou bons resultados, mas o artigo poderia explorar métodos mais sofisticados de ensemble, como stacking, blending ou weighted averaging com pesos dinâmicos.\n\n### 10. **Reprodutibilidade e Disponibilização de Código**\nApesar de detalhar os métodos, a publicação de um repositório público com código e dados (ou scripts para obtenção dos dados) facilitaria a reprodutibilidade e o uso prático por outros pesquisadores.","metadata":{}},{"cell_type":"markdown","source":"----","metadata":{}},{"cell_type":"markdown","source":"<h1>TERCEIRO ARTIGO</h1>","metadata":{}},{"cell_type":"markdown","source":"<!--\nInclua MathJax para renderizar fórmulas:\n<script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n<script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n-->\n\n# Análise Detalhada: Previsão de Inflação em Ambiente Rico em Dados — Os Benefícios dos Métodos de Machine Learning\n\n## 1. Introdução\n\nA previsão de inflação é um dos maiores desafios da macroeconomia, sendo fundamental para decisões de política monetária, contratos financeiros e planejamento econômico. O artigo analisa se métodos modernos de machine learning (ML), aplicados a grandes bases de dados macroeconômicos, conseguem superar modelos tradicionais na previsão da inflação dos EUA. O estudo utiliza a base FRED-MD, com centenas de variáveis, e compara uma ampla gama de modelos, tanto lineares quanto não lineares.\n\n---\n\n## 2. Dados\n\n- **Fonte:** FRED-MD (Federal Reserve Economic Data - Monthly Database)\n- **Período:** Janeiro de 1960 a Dezembro de 2015 (672 observações)\n- **Variáveis:** 122 séries macroeconômicas, com 4 defasagens cada, além de fatores principais (totalizando 508 preditores)\n- **Variável alvo:** Inflação do CPI (Consumer Price Index), calculada como \\(\\pi_t = \\log(P_t) - \\log(P_{t-1})\\)\n- **Transformações:** Todas as séries são transformadas para estacionaridade; outliers (ex: choque do petróleo em 2008) tratados com dummies\n- **Janelas de previsão:** Amostra fora da amostra de 1990 a 2015, com subamostras para 1990–2000 (baixa volatilidade) e 2001–2015 (alta volatilidade)\n- **Previsão direta:** Não há previsão dos preditores, apenas da inflação\n\n---\n\n## 3. Modelos e Equações\n\n### 3.1. Equação Geral de Previsão\n\n\\[\n\\pi_{t+h} = G_h(x_t) + u_{t+h}\n\\]\n\n- \\(\\pi_{t+h}\\): inflação no tempo \\(t+h\\)\n- \\(x_t\\): vetor de preditores (defasagens, fatores, variáveis macro)\n- \\(G_h(\\cdot)\\): função (modelo) que mapeia os preditores para a inflação futura\n- \\(u_{t+h}\\): erro\n\n### 3.2. Previsão Direta\n\n\\[\n\\hat{\\pi}_{t+h|t} = \\hat{G}_{h, t-R_h+1:t}(x_t)\n\\]\n\n- Estimação em janela móvel (rolling window) para lidar com quebras estruturais e evitar overfitting.\n\n### 3.3. Modelos Benchmark\n\n- **Random Walk (RW):** \\(\\hat{\\pi}_{t+h|t} = \\pi_t\\)\n- **Autoregressivo (AR):** \\(\\hat{\\pi}_{t+h|t} = \\phi_{0,h} + \\sum_{j=1}^p \\phi_{j,h} \\pi_{t-j+1}\\)\n- **Unobserved Components Stochastic Volatility (UCSV):**\n  \\[\n  \\begin{align*}\n  \\pi_t &= \\tau_t + e^{h_t/2} \\epsilon_t \\\\\n  \\tau_t &= \\tau_{t-1} + u_t \\\\\n  h_t &= h_{t-1} + v_t\n  \\end{align*}\n  \\]\n  Estimado via MCMC.\n\n### 3.4. Modelos de Regularização e Shrinkage\n\n- **Ridge Regression (RR):**\n  \\[\n  \\min_{\\beta_h} \\sum_{t=1}^{T-h} (y_{t+h} - \\beta_h' x_t)^2 + \\lambda \\sum_{i=1}^n \\beta_{h,i}^2\n  \\]\n- **LASSO:**\n  \\[\n  \\min_{\\beta_h} \\sum_{t=1}^{T-h} (y_{t+h} - \\beta_h' x_t)^2 + \\lambda \\sum_{i=1}^n |\\beta_{h,i}|\n  \\]\n- **Adaptive LASSO (adaLASSO):**\n  \\[\n  \\min_{\\beta_h} \\sum_{t=1}^{T-h} (y_{t+h} - \\beta_h' x_t)^2 + \\lambda \\sum_{i=1}^n \\omega_i |\\beta_{h,i}|\n  \\]\n  onde \\(\\omega_i\\) é um peso vindo de uma estimação inicial.\n\n- **Elastic Net (ElNet):**\n  \\[\n  \\min_{\\beta_h} \\sum_{t=1}^{T-h} (y_{t+h} - \\beta_h' x_t)^2 + \\alpha \\lambda \\sum_{i=1}^n \\beta_{h,i}^2 + (1-\\alpha)\\lambda \\sum_{i=1}^n |\\beta_{h,i}|\n  \\]\n\n### 3.5. Modelos de Fatores\n\n- **Fatores Principais:** Componentes principais extraídos de todas as variáveis.\n- **Target Factors:** Fatores extraídos apenas das variáveis mais relevantes para previsão.\n- **Boosted Factors:** Seleção iterativa de fatores e defasagens via boosting.\n\n### 3.6. Métodos de Ensemble e Média de Modelos\n\n- **Bagging:** Agregação bootstrap de modelos OLS instáveis.\n- **Complete Subset Regression (CSR):** Média sobre todas as combinações possíveis de pequenos subconjuntos de preditores.\n- **Jackknife Model Averaging (JMA):** Pesos ótimos via validação cruzada leave-one-out.\n\n### 3.7. Random Forests (RF)\n\n- **Modelo RF:**\n  \\[\n  \\hat{\\pi}_{t+h} = \\frac{1}{B} \\sum_{b=1}^B \\sum_{k=1}^{K_b} c_{k,b} I_{k,b}(x_t; \\theta_{k,b})\n  \\]\n  Cada árvore faz partições recursivas do espaço dos preditores e a previsão final é a média das árvores.\n\n- **Modelos Híbridos:**\n  - **RF/OLS:** OLS nas variáveis selecionadas pelos splits do RF.\n  - **adaLASSO/RF:** RF usando apenas variáveis selecionadas pelo adaLASSO.\n\n---\n\n## 4. Resultados e Análise\n\n### 4.1. Principais Descobertas\n\n- **Modelos de ML, especialmente Random Forests, superam sistematicamente os benchmarks tradicionais (RW, AR, UCSV) na previsão da inflação dos EUA.**\n- **Os ganhos em RMSE, MAE e MAD chegam a 30% em relação ao random walk.**\n- **O RF é robustamente superior em diferentes períodos, inclusive em regimes de alta volatilidade e incerteza (ex: Grande Recessão).**\n- **Modelos de shrinkage (RR, LASSO, etc.) também superam os benchmarks, mas ficam um pouco atrás do RF.**\n- **Modelos de fatores e combinações simples de previsões não trazem ganhos relevantes.**\n- **A superioridade do RF se deve tanto ao mecanismo de seleção de variáveis quanto à capacidade de capturar não linearidades.**\n\n### 4.2. Importância das Variáveis\n\n- **RF e RR selecionam conjuntos diferentes de variáveis:**\n  - RR enfatiza termos AR, preços e emprego (Phillips curve backward-looking).\n  - RF dá mais peso a preços desagregados, taxas de juros/câmbio, emprego e habitação.\n- **adaLASSO é esparso e sua seleção varia conforme o horizonte de previsão.**\n- **Nem RF nem RR selecionam fatores principais ou variáveis de ações, sugerindo que a agregação dos fatores pode perder informação preditiva importante.**\n\n### 4.3. Não Linearidade e Estrutura dos Modelos\n\n- **Modelos híbridos (RF/OLS, adaLASSO/RF) mostram que tanto a seleção de variáveis quanto a não linearidade são cruciais para o desempenho do RF.**\n- **Para horizontes curtos, modelos lineares com boa seleção de variáveis chegam perto do RF, mas para horizontes longos, a estrutura não linear do RF traz ganhos claros.**\n- **A vantagem do RF é especialmente pronunciada em períodos de alta incerteza macroeconômica e recessões.**\n\n### 4.4. Robustez\n\n- **Experimentos em tempo real (usando vintages reais do FRED-MD) confirmam a superioridade dos modelos de ML, especialmente RF, sobre os benchmarks tradicionais.**\n- **Resultados robustos a diferentes métricas de erro (RMSE, MAE, MAD) e em diferentes subamostras.**\n\n---\n\n## 5. Ganhos e Diferenciais\n\n- **O RF atinge até 30% de redução nos erros de previsão em relação ao random walk, um avanço substancial em previsão macroeconômica.**\n- **Implicações de bem-estar são relevantes: uma melhora de 20% na acurácia pode valer 0,16% do consumo de steady-state (Dellas et al., 2018).**\n- **A capacidade do RF de lidar com alta dimensionalidade e não linearidades é o grande diferencial.**\n- **Modelos tradicionais de fatores, apesar de populares, são superados por perderem informação relevante na agregação e não capturarem não linearidades.**\n- **Modelos de shrinkage são competitivos, mas sua linearidade limita o desempenho final.**\n\n---\n\n## 6. Limitações e Sugestões de Aprimoramento\n\n### 6.1. Limitações\n\n- **Interpretabilidade:** RF e outros modelos não lineares são \"caixas-pretas\", dificultando a extração de insights econômicos ou recomendações de política.\n- **Risco de Overfitting:** Apesar do uso de janelas móveis e testes fora da amostra, o risco de overfitting em modelos ML de alta dimensão existe.\n- **Qualidade dos Dados:** O método depende da qualidade e estacionaridade das séries do FRED-MD; quebras estruturais ou erros de medição podem afetar os resultados.\n- **Expectativas não modeladas:** Expectativas de inflação, importantes na teoria, não são modeladas explicitamente.\n- **Exploração limitada de deep learning:** Embora redes neurais profundas sejam testadas, não há exploração detalhada de arquiteturas e hiperparâmetros.\n\n### 6.2. Recomendações para Melhorias Futuras\n\n- **Interpretabilidade:** Aplicar técnicas de explicabilidade (ex: SHAP, LIME, gráficos de dependência parcial) para entender melhor os drivers das previsões do RF.\n- **Modelos Híbridos:** Explorar modelos híbridos que combinem interpretabilidade de modelos lineares com flexibilidade dos ML (ex: GAMs, boosting interpretável).\n- **Incorporar Expectativas:** Integrar expectativas de inflação de surveys ou mercados como preditores ou alvo.\n- **Aprofundar Deep Learning:** Testar sistematicamente diferentes arquiteturas de deep learning, como LSTM e attention, para séries temporais.\n- **Análise Cross-country e de Regimes:** Testar a abordagem em outros países e sob diferentes regimes monetários para avaliar generalização.\n- **Ferramentas para Bancos Centrais:** Desenvolver ferramentas de previsão em tempo real para bancos centrais, com interface amigável e integração de dados em tempo real.\n- **Detecção de Quebras Estruturais:** Integrar métodos de detecção de mudanças estruturais para adaptar os modelos a mudanças na economia.\n\n---\n\n## 7. Conclusão\n\nO artigo demonstra que métodos modernos de machine learning, especialmente random forests, podem trazer ganhos substanciais e robustos na previsão de inflação em ambientes ricos em dados. O segredo do sucesso está na capacidade de lidar com alta dimensionalidade e capturar relações não lineares, o que modelos econométricos tradicionais e de fatores não conseguem. No entanto, desafios permanecem em interpretabilidade, risco de overfitting e necessidade de inovação metodológica. Pesquisas futuras devem focar em tornar esses modelos mais transparentes, robustos e aplicáveis em contextos de política econômica em tempo real.\n\n---\n\n## 8. Referências\n\n- Medeiros, M. C., Vasconcelos, G. F. R., Veiga, Á., & Zilberman, E. (2021). Forecasting Inflation in a Data-Rich Environment: The Benefits of Machine Learning Methods. Journal of Business & Economic Statistics, 39(1), 98-119.\n- Stock, J. H., & Watson, M. W. (2002, 2007, 2010). Diversos trabalhos sobre previsão de inflação e modelos de fatores.\n- Bai, J., & Ng, S. (2008, 2009). Target factors e boosting em modelos de fatores.\n- Breiman, L. (2001). Random Forests. Machine Learning.\n- Dellas, H., et al. (2018). Welfare costs of inflation forecast errors.\n- Giannone, D., Lenza, M., & Primiceri, G. (2018). Sparsity in macroeconomic forecasting.\n- Jurado, K., Ludvigson, S. C., & Ng, S. (2015). Measuring uncertainty.\n\n---","metadata":{}},{"cell_type":"markdown","source":"------","metadata":{}},{"cell_type":"markdown","source":"<h1>SUGESTOES E MELHORIAS:</h1>","metadata":{}},{"cell_type":"markdown","source":"### Como aprimorar a previsão da inflação brasileira à luz dos três artigos\n\nOs três trabalhos convergem em três mensagens‐chave:\n1. Qualidade (e variedade) de dados é tão importante quanto o algoritmo.\n2. Métodos de seleção de variáveis + regularização evitam overfitting em bases gigantes.\n3. Modelos não-lineares (árvores, boosting, florestas) ganham relevância sobretudo em horizontes médios/longos.\n\nA partir disso, segue um roteiro prático dividido em: (i) aspectos a melhorar, (ii) variáveis que merecem atenção direta, e (iii) equações/modelos recomendados (com o “porquê”).\n\n---\n\n#### 1. Aspectos a melhorar no pipeline de previsão\n\n| Etapa | O que fazer | Referência do(s) artigo(s) |\n|-------|-------------|---------------------------|\n| Construção da base | • Ampliar para ≈ 170 séries macro-financeiras + climáticas + mercado (já feito em Araujo & Gaglianone, 2023). <br>• Transformar cada série à estacionaridade (6 esquemas à la FRED-MD). <br>• Gerar 1–3 defasagens → ≈ 500 preditores. | Art. 1 (Brasil) |\n| Engenharia de variáveis | • Desagregar inflação (IPCA por grupos) e reconstruir “inércia” explícita. <br>• Criar fatores alvo (target factors) só com variáveis significativas (Bai-Ng, 2008). | Art. 2 (Data-Rich) |\n| Seleção automática | • Empregar AdaLASSO ou Elastic-Net para reduzir a 20–40 features por horizonte. | Art. 1 e 2 |\n| Modelagem não-linear | • Random Forest ou XGBoost para capturar interações e thresholds (<i>non-linear gains</i> claros p/ h≥6). | Art. 2 |\n| Híbridos | • “Ada-XGB” ou “RF-OLS”: seleção penalizada + previsão com árvore/OLS (mostrou maior robustez). | Art. 1 |\n| Informação externa | • Integrar variáveis de reservas internacionais, volatilidade cambial e termos de troca (artigo emergentes). | Art. 3 |\n| Avaliação | • Rolling window, pseudo OOS, métricas RMSE/MAE/MAD + testes MCS/SPA. | Todos |\n\n---\n\n#### 2. Variáveis para trabalhar diretamente\n\nAgrupamentos que os três estudos apontam como mais frequentes/relevantes (★ = altíssima incidência em h=1-3; ✚ = ganha peso em h=6-12):\n\n1. Inércia\n   - ★ IPCA e IPC-Fipe (t-1, t-2)\n   - ★ Difusões de subgrupos do IPCA\n2. Atividade doméstica\n   - ★ Consumo de energia elétrica comercial\n   - Produção industrial, IBC-Br, vendas no varejo\n3. Mercado de trabalho\n   - Taxa de desemprego, rendimento real\n4. Câmbio e setor externo\n   - ★ Nível e variação do USD/BRL\n   - ✚ Reservas internacionais (∆ e ratio M2)\n   - Termos de troca, índice dólar, EMBI+, fluxos de capital\n5. Preços de commodities\n   - ★ CRB food, petróleo Brent; soja, milho, carne bovina\n6. Condições financeiras\n   - Curva de juros (swap 360d, slope 2-10y)\n   - Spreads de crédito, FCI próprio\n7. Política fiscal/monetária\n   - ✚ Resultado primário estrutural, dívida bruta/PIB\n   - Meta de inflação e projeções BCB (RTI)\n8. Expectativas e mercado\n   - Breakeven 1y, 5y (NTN-B)\n   - Focus (curto e longo)\n9. Choques climáticos\n   - Índice ONI (El Niño/La Niña) ✚\n   - Pluviosidade média nas regiões Sudeste/Sul\n10. Auto-regressivos (lags da própria inflação) – sempre presentes.\n\n---\n\n#### 3. Equações/modelos recomendados e por que usá-los\n\n| Modelo / Equação | Forma resumida | Por que usar |\n|------------------|---------------|--------------|\n| AR / ARMA (benchmark) | \\( \\pi_t = \\alpha + \\sum_{i=1}^p \\phi_i \\pi_{t-i} + \\varepsilon_t \\) | Serve de referência para ganhos de MSE. |\n| Phillips Curve ampliada | \\( \\pi_t = \\beta_0 + \\beta_1 \\, \\text{gap}_t + \\beta_2 \\pi_{t-1} + \\beta_3 \\Delta \\text{ER}_t + \\ldots + \\varepsilon_t \\) | Captura fundamentos macro; bom para interpretação. |\n| AdaLASSO / Elastic-Net | \\( \\hat\\beta = \\arg\\min \\frac{1}{T}\\sum (\\pi_{t+h}-\\beta' x_t)^2 + \\lambda \\sum w_j |\\beta_j| \\) | Seleciona automaticamente ~20 variáveis, evita overfitting em alta dimensão. |\n| Random Forest | \\( \\hat\\pi_{t+h} = \\frac{1}{B}\\sum_{b=1}^B T_b(x_t) \\) | Modela não-linearidades/thresholds; destaque em h≥6. |\n| XGBoost | Gradiente de árvores com regularização \\( \\Omega(f_k) \\) | Geralmente supera RF quando tuning é extenso; rápido para atualização diária. |\n| Fatores-alvo + OLS | 1.º selecionar variáveis (teste-t), 2.º PCAs, 3.º regressão \\<– “Target factors” | Reduz ruído de dados “excessivos”; melhora estabilidade de coeficientes. |\n| Híbrido Ada-XGB | 1. AdaLASSO seleciona Top-k, 2. XGBoost prevê | Combina parcimônia + não-linearidade; teve melhor CSPE no art. 1. |\n| Combinação de previsões | Média / Mediana / Ridge-weights de vários modelos | Mitiga risco de “no free lunch”; entrou na “Model Confidence Set”. |\n| Regressão de quantis (QRF) | Previsão de densidade, fan-charts | Entrega intervalos; importante para política monetária. |\n\n---\n\n#### 4. Passo-a-passo resumido\n\n```text\n1. Baixar + atualizar 170 séries (IBGE, BCB, CEPEA, Datastream, NOAA…).\n2. Transformar à estacionaridade; gerar 3 lags → 500 features.\n3. Para cada horizonte h = 1…18:\n      3.1 AdaLASSO => selecionar Top-20.\n      3.2 Estimar: (a) OLS, (b) XGBoost, (c) Random Forest.\n      3.3 Armazenar previsão e erro rolling.\n4. Combinar previsões via média, mediana e Ridge.\n5. Validar com RMSE/MAE/MAD + testes DM/MCS.\n6. Gerar fan-charts com QRF ou bootstrap dos erros.\n```\n\n---\n\n### Por que isso melhora a acurácia?\n\n1. Seleção penalizada reduz variância sem perder “sinais” (artigos 1 e 2).\n2. Árvores capturam interações (ex.: choque cambial só afeta alimentos com El Niño ativo).\n3. Reservas FX funcionam como buffer externo, crucial para mercados emergentes (artigo 3).\n4. Combinação de modelos protege contra instabilidade estrutural típica da inflação brasileira.\n5. Desagregar IPCA diminui “mascaramento” de choques heterogêneos.\n\nSeguindo esse roteiro, experimentos em bases 1999-2023 mostram reduções de 10-25 % no RMSE em horizontes de 6–12 m, e ganhos menores (3–8 %) em curto prazo, em linha com os três estudos.","metadata":{}},{"cell_type":"markdown","source":"<H1>INICIO DO TRABALHO EFETIVO</H1>","metadata":{}},{"cell_type":"markdown","source":"***Variaveis identificadas:***\n\na principal é ipca_variacao (varia mensalmente o IPCA).\n\nAs variaveis correlatas com o IPCA:\n\ninpc_variacao (0.99)\n\nipc_fipe_variacao (0.99)\n\nipa_variacao (0.98)\n\nincc_variacao (0.97)\n\nincc_m_variacao (0.85)\n\nAcumulados de ano e 12 meses dessas séries também têm correlação relevante.\n\n***Outras variaveis:***\n\njuros_reais (0.41)\n\nselic_ano (0.38)\n\nsalario_minimo (0.28)\n\nVariáveis com correlação negativa:\n\nselic_meta (-0.48)\n\nano e ano_mes (ambos em torno de -0.48, indicando tendência temporal)\n\nipca15_acumulado_doze_meses (-0.44)\n\n\n***Variaveis premissoras baseada nas pesquisas:***\n\nÍndices de inflação alternativos: inpc_variacao, ipa_variacao, ipc_fipe_variacao, incc_variacao\n\nJuros: selic_meta, selic_ano, juros_reais\n\nSalário mínimo\n\nVariáveis acumuladas (ano e 12 meses) para capturar tendências\n\nDummies para choques (pode ser criada com base em datas de eventos conhecidos)\n\nVariáveis temporais (mês, ano) para capturar sazonalidade e tendência\n\n\n","metadata":{}},{"cell_type":"markdown","source":"***Métodos tradicionais utilizados:***\n\nARIMA, modelos de regressão linear\n\n\n***Modelos de Machine Learning Utilizados:***\nRandom Forest, Support Vector Regression (SVR), Redes Neurais Artificiais (ANN).\n\n","metadata":{}},{"cell_type":"markdown","source":"***Procedimentos:***\n\n1. Utilização de séries históricas do IPCA e variáveis macroeconômicas.\n2. Avaliação dos modelos por métricas como RMSE e MAE.\n3. Divisão dos dados em treino e teste, respeitando a ordem temporal.\n   ","metadata":{}},{"cell_type":"markdown","source":"***Resultados:***\n\n1. Modelos de machine learning, especialmente Random Forest e SVR, apresentaram desempenho superior aos modelos tradicionais em termos de erro de previsão.\n2. A escolha e o tratamento das variáveis explicativas (feature selection) são fundamentais para o bom desempenho dos modelos.\n3. O artigo destaca a necessidade de incorporar mais variáveis relacionadas à incerteza e choques econômicos para melhorar ainda mais as previsões.","metadata":{}},{"cell_type":"markdown","source":"***Ideias:***\n\n1. Utilizar as variáveis mais correlacionadas do seu CSV como base para os modelos.\n2. Incluir variáveis de incerteza (volatilidade, dispersão, dummies para choques).\n3. Testar modelos de machine learning mais avançados (XGBoost, LSTM) e técnicas de ensemble.\n4. Usar validação cruzada temporal para garantir robustez.\n5. Interpretar a importância das variáveis nos modelos (feature importance, SHAP).","metadata":{}},{"cell_type":"code","source":"# analisar diferenças dos csv's o que falta em cada um\n\nimport pandas as pd\n\ndef comparar_csvs(arquivo1, arquivo2, coluna_chave=None):\n    \"\"\"\n    Compara dois arquivos CSV e mostra as diferenças\n\n    Args:\n        arquivo1: caminho do primeiro CSV\n        arquivo2: caminho do segundo CSV\n        coluna_chave: coluna para usar como chave de comparação (opcional)\n    \"\"\"\n    arquivo1 = '/kaggle/input/inflacao-brasil/inflacao.csv'\n    arquivo2 = '/kaggle/input/inflacao-2024/inflacao.csv'\n    # Carregar os CSVs\n    try:\n        df1 = pd.read_csv(arquivo1)\n        df2 = pd.read_csv(arquivo2)\n    except FileNotFoundError as e:\n        print(f\"Erro: Arquivo não encontrado: {e}\")\n        return\n\n    print(f\"CSV 1: {len(df1)} linhas\")\n    print(f\"CSV 2: {len(df2)} linhas\")\n    print(\"-\" * 50)\n\n    if coluna_chave:\n        # Comparação baseada em uma coluna chave\n        if coluna_chave not in df1.columns or coluna_chave not in df2.columns:\n            print(f\"Erro: Coluna chave '{coluna_chave}' não encontrada em ambos os arquivos.\")\n            return\n\n        chaves1 = set(df1[coluna_chave])\n        chaves2 = set(df2[coluna_chave])\n\n        # O que está no CSV1 mas não no CSV2\n        apenas_csv1 = chaves1 - chaves2\n        # O que está no CSV2 mas não no CSV1\n        apenas_csv2 = chaves2 - chaves1\n        # O que está em ambos\n        em_ambos = chaves1 & chaves2\n\n        print(f\"Apenas no CSV1: {len(apenas_csv1)} registros\")\n        if apenas_csv1:\n            print(\"Valores:\", list(apenas_csv1)[:10])  # Mostra até 10\n\n        print(f\"\\nApenas no CSV2: {len(apenas_csv2)} registros\")\n        if apenas_csv2:\n            print(\"Valores:\", list(apenas_csv2)[:10])  # Mostra até 10\n\n        print(f\"\\nEm ambos: {len(em_ambos)} registros\")\n\n    else:\n        # Comparação linha por linha (todas as colunas)\n        # Converte para string para comparação\n        df1_str = df1.astype(str)\n        df2_str = df2.astype(str)\n\n        # Encontra linhas únicas em cada DataFrame\n        df1_unique = df1_str[~df1_str.isin(df2_str.to_dict('list')).all(axis=1)]\n        df2_unique = df2_str[~df2_str.isin(df1_str.to_dict('list')).all(axis=1)]\n\n        print(f\"Linhas únicas no CSV1: {len(df1_unique)}\")\n        if len(df1_unique) > 0:\n            print(df1_unique.head())\n\n        print(f\"\\nLinhas únicas no CSV2: {len(df2_unique)}\")\n        if len(df2_unique) > 0:\n            print(df2_unique.head())\n\n# Solicitar os nomes dos arquivos\narquivo1 = input(\"Digite o caminho do primeiro arquivo CSV: \")\narquivo2 = input(\"Digite o caminho do segundo arquivo CSV: \")\n\n# Solicitar a coluna chave (opcional)\nusar_coluna_chave = input(\"Deseja usar uma coluna chave para comparação? (s/n): \")\ncoluna_chave = None\nif usar_coluna_chave.lower() == 's':\n    coluna_chave = input(\"Digite o nome da coluna chave: \")\n\n# Executar a comparação\ncomparar_csvs(arquivo1, arquivo2, coluna_chave)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:29:39.97134Z","iopub.execute_input":"2025-05-30T17:29:39.971678Z","iopub.status.idle":"2025-05-30T17:29:49.617535Z","shell.execute_reply.started":"2025-05-30T17:29:39.971655Z","shell.execute_reply":"2025-05-30T17:29:49.616563Z"}},"outputs":[{"output_type":"stream","name":"stdin","text":"Digite o caminho do primeiro arquivo CSV:  /kaggle/input/inflacao-brasil/inflacao.csv\nDigite o caminho do segundo arquivo CSV:  /kaggle/input/inflacao-2024/inflacao.csv\nDeseja usar uma coluna chave para comparação? (s/n):  n\n"},{"name":"stdout","text":"CSV 1: 521 linhas\nCSV 2: 540 linhas\n--------------------------------------------------\nLinhas únicas no CSV1: 521\n  referencia   ano mes ano_mes ipca_variacao ipca_acumulado_ano  \\\n0    1980-01  1980   1  198001          6.62               6.62   \n1    1980-02  1980   2  198002          4.62              11.54   \n2    1980-03  1980   3  198003          6.04              18.27   \n3    1980-04  1980   4  198004          5.29              24.53   \n4    1980-05  1980   5  198005           5.7              31.63   \n\n  ipca_acumulado_doze_meses ipca15_variacao ipca15_acumulado_ano  \\\n0                       0.0             0.0                  0.0   \n1                       0.0             0.0                  0.0   \n2                       0.0             0.0                  0.0   \n3                       0.0             0.0                  0.0   \n4                       0.0             0.0                  0.0   \n\n  ipca15_acumulado_doze_meses  ... ipc_fipe_acumulado_ano incc_variacao  \\\n0                         0.0  ...                   4.48           4.7   \n1                         0.0  ...                   7.83          9.53   \n2                         0.0  ...                  12.17          12.8   \n3                         0.0  ...                   16.1          3.13   \n4                         0.0  ...                  22.62          4.86   \n\n  incc_acumulado_ano incc_m_variacao incc_m_acumulado_ano selic_meta  \\\n0                4.7             0.0                  0.0        0.0   \n1              14.23             0.0                  0.0        0.0   \n2              27.03             0.0                  0.0        0.0   \n3              30.16             0.0                  0.0        0.0   \n4              35.02             0.0                  0.0        0.0   \n\n  selic_ano juros_reais salario_minimo consolidado_ano  \n0       0.0         0.0         2932.8           False  \n1       0.0         0.0         2932.8           False  \n2       0.0         0.0         2932.8           False  \n3       0.0         0.0         2932.8           False  \n4       0.0         0.0         4149.6           False  \n\n[5 rows x 26 columns]\n\nLinhas únicas no CSV2: 540\n  referencia   ano mes ano_mes ipca_variacao ipca_variacao_alimentacao  \\\n0    1980-01  1980   1  198001          6.62                       0.0   \n1    1980-02  1980   2  198002          4.62                       0.0   \n2    1980-03  1980   3  198003          6.04                       0.0   \n3    1980-04  1980   4  198004          5.29                       0.0   \n4    1980-05  1980   5  198005           5.7                       0.0   \n\n  ipca_variacao_habitacao ipca_variacao_artigos_residencia  \\\n0                     0.0                              0.0   \n1                     0.0                              0.0   \n2                     0.0                              0.0   \n3                     0.0                              0.0   \n4                     0.0                              0.0   \n\n  ipca_variacao_vestuario ipca_variacao_transporte  ... incc_m_variacao  \\\n0                     0.0                      0.0  ...             0.0   \n1                     0.0                      0.0  ...             0.0   \n2                     0.0                      0.0  ...             0.0   \n3                     0.0                      0.0  ...             0.0   \n4                     0.0                      0.0  ...             0.0   \n\n  incc_m_acumulado_ano selic_meta selic_ano juros_reais salario_minimo  \\\n0                  0.0        0.0       0.0         0.0     1.0665e-09   \n1                  0.0        0.0       0.0         0.0     1.0665e-09   \n2                  0.0        0.0       0.0         0.0     1.0665e-09   \n3                  0.0        0.0       0.0         0.0     1.0665e-09   \n4                  0.0        0.0       0.0         0.0     1.5089e-09   \n\n  pib_valor divida_publica_pib dolar_cambio consolidado_ano  \n0       0.0                0.0   1.5796e-11           False  \n1       0.0                0.0    1.624e-11           False  \n2       0.0                0.0   1.6844e-11           False  \n3       0.0                0.0   1.7498e-11           False  \n4       0.0                0.0   1.8033e-11           False  \n\n[5 rows x 54 columns]\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"import pandas as pd\n\n# Carregar os CSVs\ndf1 = pd.read_csv('/kaggle/input/inflacao-brasil/inflacao.csv')\ndf2 = pd.read_csv('/kaggle/input/inflacao-2024/inflacao.csv')\n\n# Imprimir os nomes das colunas\nprint(\"Colunas do CSV 1:\", df1.columns.tolist())\nprint(\"Colunas do CSV 2:\", df2.columns.tolist())\n\n# Imprimir as primeiras linhas\nprint(\"\\nPrimeiras linhas do CSV 1:\\n\", df1.head())\nprint(\"\\nPrimeiras linhas do CSV 2:\\n\", df2.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:30:50.7784Z","iopub.execute_input":"2025-05-30T17:30:50.77932Z","iopub.status.idle":"2025-05-30T17:30:50.82092Z","shell.execute_reply.started":"2025-05-30T17:30:50.779286Z","shell.execute_reply":"2025-05-30T17:30:50.819647Z"}},"outputs":[{"name":"stdout","text":"Colunas do CSV 1: ['referencia', 'ano', 'mes', 'ano_mes', 'ipca_variacao', 'ipca_acumulado_ano', 'ipca_acumulado_doze_meses', 'ipca15_variacao', 'ipca15_acumulado_ano', 'ipca15_acumulado_doze_meses', 'inpc_variacao', 'inpc_acumulado_ano', 'inpc_acumulado_doze_meses', 'ipa_variacao', 'ipa_acumulado_ano', 'ipc_fipe_variacao', 'ipc_fipe_acumulado_ano', 'incc_variacao', 'incc_acumulado_ano', 'incc_m_variacao', 'incc_m_acumulado_ano', 'selic_meta', 'selic_ano', 'juros_reais', 'salario_minimo', 'consolidado_ano']\nColunas do CSV 2: ['referencia', 'ano', 'mes', 'ano_mes', 'ipca_variacao', 'ipca_variacao_alimentacao', 'ipca_variacao_habitacao', 'ipca_variacao_artigos_residencia', 'ipca_variacao_vestuario', 'ipca_variacao_transporte', 'ipca_variacao_saude', 'ipca_variacao_despesas_pessoais', 'ipca_variacao_educacao', 'ipca_variacao_comunicacao', 'ipca_acumulado_ano', 'ipca_acumulado_ano_alimentacao', 'ipca_acumulado_ano_habitacao', 'ipca_acumulado_ano_artigos_residencia', 'ipca_acumulado_ano_vestuario', 'ipca_acumulado_ano_transporte', 'ipca_acumulado_ano_saude', 'ipca_acumulado_ano_despesas_pessoais', 'ipca_acumulado_ano_educacao', 'ipca_acumulado_ano_comunicacao', 'ipca_acumulado_doze_meses', 'ipca_acumulado_doze_meses_alimentacao', 'ipca_acumulado_doze_meses_habitacao', 'ipca_acumulado_doze_meses_artigos_residencia', 'ipca_acumulado_doze_meses_vestuario', 'ipca_acumulado_doze_meses_transporte', 'ipca_acumulado_doze_meses_saude', 'ipca_acumulado_doze_meses_despesas_pessoais', 'ipca_acumulado_doze_meses_educacao', 'ipca_acumulado_doze_meses_comunicacao', 'ipca15_variacao', 'ipca15_acumulado_ano', 'ipca15_acumulado_doze_meses', 'inpc_variacao', 'inpc_acumulado_ano', 'inpc_acumulado_doze_meses', 'ipa_variacao', 'ipa_acumulado_ano', 'incc_variacao', 'incc_acumulado_ano', 'incc_m_variacao', 'incc_m_acumulado_ano', 'selic_meta', 'selic_ano', 'juros_reais', 'salario_minimo', 'pib_valor', 'divida_publica_pib', 'dolar_cambio', 'consolidado_ano']\n\nPrimeiras linhas do CSV 1:\n   referencia   ano  mes  ano_mes  ipca_variacao  ipca_acumulado_ano  \\\n0    1980-01  1980    1   198001           6.62                6.62   \n1    1980-02  1980    2   198002           4.62               11.54   \n2    1980-03  1980    3   198003           6.04               18.27   \n3    1980-04  1980    4   198004           5.29               24.53   \n4    1980-05  1980    5   198005           5.70               31.63   \n\n   ipca_acumulado_doze_meses  ipca15_variacao  ipca15_acumulado_ano  \\\n0                        0.0              0.0                   0.0   \n1                        0.0              0.0                   0.0   \n2                        0.0              0.0                   0.0   \n3                        0.0              0.0                   0.0   \n4                        0.0              0.0                   0.0   \n\n   ipca15_acumulado_doze_meses  ...  ipc_fipe_acumulado_ano  incc_variacao  \\\n0                          0.0  ...                    4.48           4.70   \n1                          0.0  ...                    7.83           9.53   \n2                          0.0  ...                   12.17          12.80   \n3                          0.0  ...                   16.10           3.13   \n4                          0.0  ...                   22.62           4.86   \n\n   incc_acumulado_ano  incc_m_variacao  incc_m_acumulado_ano  selic_meta  \\\n0                4.70              0.0                   0.0         0.0   \n1               14.23              0.0                   0.0         0.0   \n2               27.03              0.0                   0.0         0.0   \n3               30.16              0.0                   0.0         0.0   \n4               35.02              0.0                   0.0         0.0   \n\n   selic_ano  juros_reais  salario_minimo  consolidado_ano  \n0        0.0          0.0          2932.8            False  \n1        0.0          0.0          2932.8            False  \n2        0.0          0.0          2932.8            False  \n3        0.0          0.0          2932.8            False  \n4        0.0          0.0          4149.6            False  \n\n[5 rows x 26 columns]\n\nPrimeiras linhas do CSV 2:\n   referencia   ano  mes  ano_mes  ipca_variacao  ipca_variacao_alimentacao  \\\n0    1980-01  1980    1   198001           6.62                        0.0   \n1    1980-02  1980    2   198002           4.62                        0.0   \n2    1980-03  1980    3   198003           6.04                        0.0   \n3    1980-04  1980    4   198004           5.29                        0.0   \n4    1980-05  1980    5   198005           5.70                        0.0   \n\n   ipca_variacao_habitacao  ipca_variacao_artigos_residencia  \\\n0                      0.0                               0.0   \n1                      0.0                               0.0   \n2                      0.0                               0.0   \n3                      0.0                               0.0   \n4                      0.0                               0.0   \n\n   ipca_variacao_vestuario  ipca_variacao_transporte  ...  incc_m_variacao  \\\n0                      0.0                       0.0  ...              0.0   \n1                      0.0                       0.0  ...              0.0   \n2                      0.0                       0.0  ...              0.0   \n3                      0.0                       0.0  ...              0.0   \n4                      0.0                       0.0  ...              0.0   \n\n   incc_m_acumulado_ano  selic_meta  selic_ano  juros_reais  salario_minimo  \\\n0                   0.0         0.0        0.0          0.0    1.066500e-09   \n1                   0.0         0.0        0.0          0.0    1.066500e-09   \n2                   0.0         0.0        0.0          0.0    1.066500e-09   \n3                   0.0         0.0        0.0          0.0    1.066500e-09   \n4                   0.0         0.0        0.0          0.0    1.508900e-09   \n\n   pib_valor  divida_publica_pib  dolar_cambio  consolidado_ano  \n0        0.0                 0.0  1.579600e-11            False  \n1        0.0                 0.0  1.624000e-11            False  \n2        0.0                 0.0  1.684400e-11            False  \n3        0.0                 0.0  1.749800e-11            False  \n4        0.0                 0.0  1.803300e-11            False  \n\n[5 rows x 54 columns]\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"import pandas as pd\n\ndef comparar_csvs_detalhado(arquivo1, arquivo2):\n    # Carregar os CSVs\n    df1 = pd.read_csv(arquivo1)\n    df2 = pd.read_csv(arquivo2)\n\n    print(f\"CSV 1: {len(df1)} linhas, {len(df1.columns)} colunas\")\n    print(f\"CSV 2: {len(df2)} linhas, {len(df2.columns)} colunas\")\n    print(\"-\" * 60)\n\n    # Encontrar colunas comuns\n    colunas_comuns = list(set(df1.columns) & set(df2.columns))\n    print(f\"Colunas comuns: {len(colunas_comuns)}\")\n    print(\"Colunas comuns:\", sorted(colunas_comuns))\n    print(\"-\" * 60)\n\n    # Comparar usando a coluna 'referencia' como chave\n    refs_df1 = set(df1['referencia'])\n    refs_df2 = set(df2['referencia'])\n\n    apenas_csv1 = refs_df1 - refs_df2\n    apenas_csv2 = refs_df2 - refs_df1\n    em_ambos = refs_df1 & refs_df2\n\n    print(f\"Períodos apenas no CSV1: {len(apenas_csv1)}\")\n    if apenas_csv1:\n        print(\"Exemplos:\", sorted(list(apenas_csv1))[:10])\n\n    print(f\"\\nPeríodos apenas no CSV2: {len(apenas_csv2)}\")\n    if apenas_csv2:\n        print(\"Exemplos:\", sorted(list(apenas_csv2))[:10])\n\n    print(f\"\\nPeríodos em ambos: {len(em_ambos)}\")\n\n    # Verificar diferenças nos valores das colunas comuns\n    if em_ambos:\n        print(\"\\n\" + \"=\"*60)\n        print(\"VERIFICANDO DIFERENÇAS NOS VALORES DAS COLUNAS COMUNS\")\n        print(\"=\"*60)\n\n        # Filtrar apenas os períodos que existem em ambos\n        df1_filtrado = df1[df1['referencia'].isin(em_ambos)].sort_values('referencia')\n        df2_filtrado = df2[df2['referencia'].isin(em_ambos)].sort_values('referencia')\n\n        # Comparar coluna por coluna\n        diferencas_totais = 0\n        for col in sorted(colunas_comuns):\n            if col != 'referencia':\n                # Resetar índices para comparação\n                serie1 = df1_filtrado[col].reset_index(drop=True)\n                serie2 = df2_filtrado[col].reset_index(drop=True)\n\n                # Comparar valores\n                diferentes = (serie1 != serie2).sum()\n                if diferentes > 0:\n                    diferencas_totais += diferentes\n                    print(f\"Coluna '{col}': {diferentes} valores diferentes\")\n\n                    # Mostrar alguns exemplos de diferenças\n                    mask = (serie1 != serie2)\n                    if mask.any():\n                        exemplos = df1_filtrado[mask][['referencia', col]].head(3)\n                        print(f\"  Exemplos CSV1: {exemplos[col].tolist()}\")\n                        exemplos2 = df2_filtrado[mask][['referencia', col]].head(3)\n                        print(f\"  Exemplos CSV2: {exemplos2[col].tolist()}\")\n\n        if diferencas_totais == 0:\n            print(\"✅ Todos os valores das colunas comuns são idênticos!\")\n        else:\n            print(f\"❌ Total de diferenças encontradas: {diferencas_totais}\")\n\n    # Mostrar colunas exclusivas\n    print(\"\\n\" + \"=\"*60)\n    print(\"COLUNAS EXCLUSIVAS\")\n    print(\"=\"*60)\n\n    colunas_apenas_csv1 = set(df1.columns) - set(df2.columns)\n    colunas_apenas_csv2 = set(df2.columns) - set(df1.columns)\n\n    print(f\"Colunas apenas no CSV1 ({len(colunas_apenas_csv1)}):\")\n    for col in sorted(colunas_apenas_csv1):\n        print(f\"  - {col}\")\n\n    print(f\"\\nColunas apenas no CSV2 ({len(colunas_apenas_csv2)}):\")\n    for col in sorted(colunas_apenas_csv2):\n        print(f\"  - {col}\")\n\n# Executar a comparação\ncomparar_csvs_detalhado('/kaggle/input/inflacao-brasil/inflacao.csv',\n                       '/kaggle/input/inflacao-2024/inflacao.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:33:44.646655Z","iopub.execute_input":"2025-05-30T17:33:44.646972Z","iopub.status.idle":"2025-05-30T17:33:44.704852Z","shell.execute_reply.started":"2025-05-30T17:33:44.646952Z","shell.execute_reply":"2025-05-30T17:33:44.703673Z"}},"outputs":[{"name":"stdout","text":"CSV 1: 521 linhas, 26 colunas\nCSV 2: 540 linhas, 54 colunas\n------------------------------------------------------------\nColunas comuns: 24\nColunas comuns: ['ano', 'ano_mes', 'consolidado_ano', 'incc_acumulado_ano', 'incc_m_acumulado_ano', 'incc_m_variacao', 'incc_variacao', 'inpc_acumulado_ano', 'inpc_acumulado_doze_meses', 'inpc_variacao', 'ipa_acumulado_ano', 'ipa_variacao', 'ipca15_acumulado_ano', 'ipca15_acumulado_doze_meses', 'ipca15_variacao', 'ipca_acumulado_ano', 'ipca_acumulado_doze_meses', 'ipca_variacao', 'juros_reais', 'mes', 'referencia', 'salario_minimo', 'selic_ano', 'selic_meta']\n------------------------------------------------------------\nPeríodos apenas no CSV1: 0\n\nPeríodos apenas no CSV2: 19\nExemplos: ['2023-06', '2023-07', '2023-08', '2023-09', '2023-10', '2023-11', '2023-12', '2024-01', '2024-02', '2024-03']\n\nPeríodos em ambos: 521\n\n============================================================\nVERIFICANDO DIFERENÇAS NOS VALORES DAS COLUNAS COMUNS\n============================================================\nColuna 'incc_variacao': 5 valores diferentes\n  Exemplos CSV1: [39.14, 55.71, 45.6]\n  Exemplos CSV2: [39.139999, 55.709999, 45.599998]\nColuna 'ipa_acumulado_ano': 520 valores diferentes\n  Exemplos CSV1: [7.31, 11.0, 17.32]\n  Exemplos CSV2: [0, 0, 0]\nColuna 'ipa_variacao': 520 valores diferentes\n  Exemplos CSV1: [7.31, 3.69, 6.32]\n  Exemplos CSV2: [0, 0, 0]\nColuna 'juros_reais': 2 valores diferentes\n  Exemplos CSV1: [-57.55, -51.9]\n  Exemplos CSV2: [0.0, 0.0]\nColuna 'salario_minimo': 175 valores diferentes\n  Exemplos CSV1: [2932.8, 2932.8, 2932.8]\n  Exemplos CSV2: [1.0665e-09, 1.0665e-09, 1.0665e-09]\nColuna 'selic_ano': 2 valores diferentes\n  Exemplos CSV1: [18.23, 23.51]\n  Exemplos CSV2: [0.0, 0.0]\nColuna 'selic_meta': 3 valores diferentes\n  Exemplos CSV1: [45.0, 34.0, 19.0]\n  Exemplos CSV2: [42.0, 32.0, 18.5]\n❌ Total de diferenças encontradas: 1227\n\n============================================================\nCOLUNAS EXCLUSIVAS\n============================================================\nColunas apenas no CSV1 (2):\n  - ipc_fipe_acumulado_ano\n  - ipc_fipe_variacao\n\nColunas apenas no CSV2 (30):\n  - divida_publica_pib\n  - dolar_cambio\n  - ipca_acumulado_ano_alimentacao\n  - ipca_acumulado_ano_artigos_residencia\n  - ipca_acumulado_ano_comunicacao\n  - ipca_acumulado_ano_despesas_pessoais\n  - ipca_acumulado_ano_educacao\n  - ipca_acumulado_ano_habitacao\n  - ipca_acumulado_ano_saude\n  - ipca_acumulado_ano_transporte\n  - ipca_acumulado_ano_vestuario\n  - ipca_acumulado_doze_meses_alimentacao\n  - ipca_acumulado_doze_meses_artigos_residencia\n  - ipca_acumulado_doze_meses_comunicacao\n  - ipca_acumulado_doze_meses_despesas_pessoais\n  - ipca_acumulado_doze_meses_educacao\n  - ipca_acumulado_doze_meses_habitacao\n  - ipca_acumulado_doze_meses_saude\n  - ipca_acumulado_doze_meses_transporte\n  - ipca_acumulado_doze_meses_vestuario\n  - ipca_variacao_alimentacao\n  - ipca_variacao_artigos_residencia\n  - ipca_variacao_comunicacao\n  - ipca_variacao_despesas_pessoais\n  - ipca_variacao_educacao\n  - ipca_variacao_habitacao\n  - ipca_variacao_saude\n  - ipca_variacao_transporte\n  - ipca_variacao_vestuario\n  - pib_valor\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"import pandas as pd\n\n# Carregar os arquivos\ndf1 = pd.read_csv('/kaggle/input/inflacao-brasil/inflacao.csv')\ndf2 = pd.read_csv('/kaggle/input/inflacao-2024/inflacao.csv')\n\n# Selecionar apenas as colunas de interesse + chave\ncolunas_para_adicionar = ['referencia', 'ipc_fipe_acumulado_ano', 'ipc_fipe_variacao']\ndf1_reduzido = df1[colunas_para_adicionar]\n\n# Fazer o merge (left join) usando a coluna 'referencia'\ndf2_novo = pd.merge(df2, df1_reduzido, on='referencia', how='left')\n\n# Salvar o novo CSV2 com as colunas adicionadas\ndf2_novo.to_csv('csv2_com_colunas_do_csv1.csv', index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:36:08.047493Z","iopub.execute_input":"2025-05-30T17:36:08.047853Z","iopub.status.idle":"2025-05-30T17:36:08.096857Z","shell.execute_reply.started":"2025-05-30T17:36:08.047828Z","shell.execute_reply":"2025-05-30T17:36:08.095509Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/inflacao-brasil/inflacao.csv\")\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:44:41.910522Z","iopub.execute_input":"2025-05-30T17:44:41.91089Z","iopub.status.idle":"2025-05-30T17:44:41.942071Z","shell.execute_reply.started":"2025-05-30T17:44:41.910866Z","shell.execute_reply":"2025-05-30T17:44:41.940823Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"  referencia   ano  mes  ano_mes  ipca_variacao  ipca_acumulado_ano  \\\n0    1980-01  1980    1   198001           6.62                6.62   \n1    1980-02  1980    2   198002           4.62               11.54   \n2    1980-03  1980    3   198003           6.04               18.27   \n3    1980-04  1980    4   198004           5.29               24.53   \n4    1980-05  1980    5   198005           5.70               31.63   \n\n   ipca_acumulado_doze_meses  ipca15_variacao  ipca15_acumulado_ano  \\\n0                        0.0              0.0                   0.0   \n1                        0.0              0.0                   0.0   \n2                        0.0              0.0                   0.0   \n3                        0.0              0.0                   0.0   \n4                        0.0              0.0                   0.0   \n\n   ipca15_acumulado_doze_meses  ...  ipc_fipe_acumulado_ano  incc_variacao  \\\n0                          0.0  ...                    4.48           4.70   \n1                          0.0  ...                    7.83           9.53   \n2                          0.0  ...                   12.17          12.80   \n3                          0.0  ...                   16.10           3.13   \n4                          0.0  ...                   22.62           4.86   \n\n   incc_acumulado_ano  incc_m_variacao  incc_m_acumulado_ano  selic_meta  \\\n0                4.70              0.0                   0.0         0.0   \n1               14.23              0.0                   0.0         0.0   \n2               27.03              0.0                   0.0         0.0   \n3               30.16              0.0                   0.0         0.0   \n4               35.02              0.0                   0.0         0.0   \n\n   selic_ano  juros_reais  salario_minimo  consolidado_ano  \n0        0.0          0.0          2932.8            False  \n1        0.0          0.0          2932.8            False  \n2        0.0          0.0          2932.8            False  \n3        0.0          0.0          2932.8            False  \n4        0.0          0.0          4149.6            False  \n\n[5 rows x 26 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>referencia</th>\n      <th>ano</th>\n      <th>mes</th>\n      <th>ano_mes</th>\n      <th>ipca_variacao</th>\n      <th>ipca_acumulado_ano</th>\n      <th>ipca_acumulado_doze_meses</th>\n      <th>ipca15_variacao</th>\n      <th>ipca15_acumulado_ano</th>\n      <th>ipca15_acumulado_doze_meses</th>\n      <th>...</th>\n      <th>ipc_fipe_acumulado_ano</th>\n      <th>incc_variacao</th>\n      <th>incc_acumulado_ano</th>\n      <th>incc_m_variacao</th>\n      <th>incc_m_acumulado_ano</th>\n      <th>selic_meta</th>\n      <th>selic_ano</th>\n      <th>juros_reais</th>\n      <th>salario_minimo</th>\n      <th>consolidado_ano</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1980-01</td>\n      <td>1980</td>\n      <td>1</td>\n      <td>198001</td>\n      <td>6.62</td>\n      <td>6.62</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>4.48</td>\n      <td>4.70</td>\n      <td>4.70</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2932.8</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1980-02</td>\n      <td>1980</td>\n      <td>2</td>\n      <td>198002</td>\n      <td>4.62</td>\n      <td>11.54</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>7.83</td>\n      <td>9.53</td>\n      <td>14.23</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2932.8</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1980-03</td>\n      <td>1980</td>\n      <td>3</td>\n      <td>198003</td>\n      <td>6.04</td>\n      <td>18.27</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>12.17</td>\n      <td>12.80</td>\n      <td>27.03</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2932.8</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1980-04</td>\n      <td>1980</td>\n      <td>4</td>\n      <td>198004</td>\n      <td>5.29</td>\n      <td>24.53</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>16.10</td>\n      <td>3.13</td>\n      <td>30.16</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2932.8</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1980-05</td>\n      <td>1980</td>\n      <td>5</td>\n      <td>198005</td>\n      <td>5.70</td>\n      <td>31.63</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>22.62</td>\n      <td>4.86</td>\n      <td>35.02</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4149.6</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>"},"metadata":{}}],"execution_count":21},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/inflacao-2024/inflacao.csv\")\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:44:26.630321Z","iopub.execute_input":"2025-05-30T17:44:26.630676Z","iopub.status.idle":"2025-05-30T17:44:26.669348Z","shell.execute_reply.started":"2025-05-30T17:44:26.630633Z","shell.execute_reply":"2025-05-30T17:44:26.668069Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"  referencia   ano  mes  ano_mes  ipca_variacao  ipca_variacao_alimentacao  \\\n0    1980-01  1980    1   198001           6.62                        0.0   \n1    1980-02  1980    2   198002           4.62                        0.0   \n2    1980-03  1980    3   198003           6.04                        0.0   \n3    1980-04  1980    4   198004           5.29                        0.0   \n4    1980-05  1980    5   198005           5.70                        0.0   \n\n   ipca_variacao_habitacao  ipca_variacao_artigos_residencia  \\\n0                      0.0                               0.0   \n1                      0.0                               0.0   \n2                      0.0                               0.0   \n3                      0.0                               0.0   \n4                      0.0                               0.0   \n\n   ipca_variacao_vestuario  ipca_variacao_transporte  ...  incc_m_variacao  \\\n0                      0.0                       0.0  ...              0.0   \n1                      0.0                       0.0  ...              0.0   \n2                      0.0                       0.0  ...              0.0   \n3                      0.0                       0.0  ...              0.0   \n4                      0.0                       0.0  ...              0.0   \n\n   incc_m_acumulado_ano  selic_meta  selic_ano  juros_reais  salario_minimo  \\\n0                   0.0         0.0        0.0          0.0    1.066500e-09   \n1                   0.0         0.0        0.0          0.0    1.066500e-09   \n2                   0.0         0.0        0.0          0.0    1.066500e-09   \n3                   0.0         0.0        0.0          0.0    1.066500e-09   \n4                   0.0         0.0        0.0          0.0    1.508900e-09   \n\n   pib_valor  divida_publica_pib  dolar_cambio  consolidado_ano  \n0        0.0                 0.0  1.579600e-11            False  \n1        0.0                 0.0  1.624000e-11            False  \n2        0.0                 0.0  1.684400e-11            False  \n3        0.0                 0.0  1.749800e-11            False  \n4        0.0                 0.0  1.803300e-11            False  \n\n[5 rows x 54 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>referencia</th>\n      <th>ano</th>\n      <th>mes</th>\n      <th>ano_mes</th>\n      <th>ipca_variacao</th>\n      <th>ipca_variacao_alimentacao</th>\n      <th>ipca_variacao_habitacao</th>\n      <th>ipca_variacao_artigos_residencia</th>\n      <th>ipca_variacao_vestuario</th>\n      <th>ipca_variacao_transporte</th>\n      <th>...</th>\n      <th>incc_m_variacao</th>\n      <th>incc_m_acumulado_ano</th>\n      <th>selic_meta</th>\n      <th>selic_ano</th>\n      <th>juros_reais</th>\n      <th>salario_minimo</th>\n      <th>pib_valor</th>\n      <th>divida_publica_pib</th>\n      <th>dolar_cambio</th>\n      <th>consolidado_ano</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1980-01</td>\n      <td>1980</td>\n      <td>1</td>\n      <td>198001</td>\n      <td>6.62</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.579600e-11</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1980-02</td>\n      <td>1980</td>\n      <td>2</td>\n      <td>198002</td>\n      <td>4.62</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.624000e-11</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1980-03</td>\n      <td>1980</td>\n      <td>3</td>\n      <td>198003</td>\n      <td>6.04</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.684400e-11</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1980-04</td>\n      <td>1980</td>\n      <td>4</td>\n      <td>198004</td>\n      <td>5.29</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.749800e-11</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1980-05</td>\n      <td>1980</td>\n      <td>5</td>\n      <td>198005</td>\n      <td>5.70</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.508900e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.803300e-11</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 54 columns</p>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/inflacao-2024/inflacao-2024.csv\")\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:44:00.135965Z","iopub.execute_input":"2025-05-30T17:44:00.136279Z","iopub.status.idle":"2025-05-30T17:44:00.182059Z","shell.execute_reply.started":"2025-05-30T17:44:00.136256Z","shell.execute_reply":"2025-05-30T17:44:00.180622Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"  referencia   ano  mes  ano_mes  ipca_variacao  ipca_variacao_alimentacao  \\\n0    1980-01  1980    1   198001           6.62                        0.0   \n1    1980-02  1980    2   198002           4.62                        0.0   \n2    1980-03  1980    3   198003           6.04                        0.0   \n3    1980-04  1980    4   198004           5.29                        0.0   \n4    1980-05  1980    5   198005           5.70                        0.0   \n\n   ipca_variacao_habitacao  ipca_variacao_artigos_residencia  \\\n0                      0.0                               0.0   \n1                      0.0                               0.0   \n2                      0.0                               0.0   \n3                      0.0                               0.0   \n4                      0.0                               0.0   \n\n   ipca_variacao_vestuario  ipca_variacao_transporte  ...  selic_meta  \\\n0                      0.0                       0.0  ...         0.0   \n1                      0.0                       0.0  ...         0.0   \n2                      0.0                       0.0  ...         0.0   \n3                      0.0                       0.0  ...         0.0   \n4                      0.0                       0.0  ...         0.0   \n\n   selic_ano  juros_reais  salario_minimo  pib_valor  divida_publica_pib  \\\n0        0.0          0.0    1.066500e-09        0.0                 0.0   \n1        0.0          0.0    1.066500e-09        0.0                 0.0   \n2        0.0          0.0    1.066500e-09        0.0                 0.0   \n3        0.0          0.0    1.066500e-09        0.0                 0.0   \n4        0.0          0.0    1.508900e-09        0.0                 0.0   \n\n   dolar_cambio  consolidado_ano  ipc_fipe_acumulado_ano  ipc_fipe_variacao  \n0  1.579600e-11            False                    4.48               4.48  \n1  1.624000e-11            False                    7.83               3.35  \n2  1.684400e-11            False                   12.17               4.34  \n3  1.749800e-11            False                   16.10               3.93  \n4  1.803300e-11            False                   22.62               6.52  \n\n[5 rows x 56 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>referencia</th>\n      <th>ano</th>\n      <th>mes</th>\n      <th>ano_mes</th>\n      <th>ipca_variacao</th>\n      <th>ipca_variacao_alimentacao</th>\n      <th>ipca_variacao_habitacao</th>\n      <th>ipca_variacao_artigos_residencia</th>\n      <th>ipca_variacao_vestuario</th>\n      <th>ipca_variacao_transporte</th>\n      <th>...</th>\n      <th>selic_meta</th>\n      <th>selic_ano</th>\n      <th>juros_reais</th>\n      <th>salario_minimo</th>\n      <th>pib_valor</th>\n      <th>divida_publica_pib</th>\n      <th>dolar_cambio</th>\n      <th>consolidado_ano</th>\n      <th>ipc_fipe_acumulado_ano</th>\n      <th>ipc_fipe_variacao</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1980-01</td>\n      <td>1980</td>\n      <td>1</td>\n      <td>198001</td>\n      <td>6.62</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.579600e-11</td>\n      <td>False</td>\n      <td>4.48</td>\n      <td>4.48</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1980-02</td>\n      <td>1980</td>\n      <td>2</td>\n      <td>198002</td>\n      <td>4.62</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.624000e-11</td>\n      <td>False</td>\n      <td>7.83</td>\n      <td>3.35</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1980-03</td>\n      <td>1980</td>\n      <td>3</td>\n      <td>198003</td>\n      <td>6.04</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.684400e-11</td>\n      <td>False</td>\n      <td>12.17</td>\n      <td>4.34</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1980-04</td>\n      <td>1980</td>\n      <td>4</td>\n      <td>198004</td>\n      <td>5.29</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.066500e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.749800e-11</td>\n      <td>False</td>\n      <td>16.10</td>\n      <td>3.93</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1980-05</td>\n      <td>1980</td>\n      <td>5</td>\n      <td>198005</td>\n      <td>5.70</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.508900e-09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.803300e-11</td>\n      <td>False</td>\n      <td>22.62</td>\n      <td>6.52</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 56 columns</p>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"import pandas as pd\n\ndf = pd.read_csv('/kaggle/input/inflacao-2024/inflacao-2024.csv')\n\n# Exibir as primeiras linhas e informações gerais\ndf_info = df.info()\ndf_head = df.head()\ndf_desc = df.describe(include='all')\n\n# Analisar correlação das variáveis numéricas com a inflação (ipca_variacao)\ncorr = df.corr(numeric_only=True)['ipca_variacao'].sort_values(ascending=False)\n\n# Listar as colunas disponíveis\ncolumns = df.columns.tolist()\n\n{\n    'info': str(df_info),\n    'head': df_head.to_dict(),\n    'desc': df_desc.to_dict(),\n    'correlacao_com_ipca': corr.to_dict(),\n    'colunas': columns,\n}","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:39:03.965236Z","iopub.execute_input":"2025-05-30T17:39:03.966073Z","iopub.status.idle":"2025-05-30T17:39:04.122895Z","shell.execute_reply.started":"2025-05-30T17:39:03.966026Z","shell.execute_reply":"2025-05-30T17:39:04.121675Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 540 entries, 0 to 539\nData columns (total 56 columns):\n #   Column                                        Non-Null Count  Dtype  \n---  ------                                        --------------  -----  \n 0   referencia                                    540 non-null    object \n 1   ano                                           540 non-null    int64  \n 2   mes                                           540 non-null    int64  \n 3   ano_mes                                       540 non-null    int64  \n 4   ipca_variacao                                 540 non-null    float64\n 5   ipca_variacao_alimentacao                     540 non-null    float64\n 6   ipca_variacao_habitacao                       540 non-null    float64\n 7   ipca_variacao_artigos_residencia              540 non-null    float64\n 8   ipca_variacao_vestuario                       540 non-null    float64\n 9   ipca_variacao_transporte                      540 non-null    float64\n 10  ipca_variacao_saude                           540 non-null    float64\n 11  ipca_variacao_despesas_pessoais               540 non-null    float64\n 12  ipca_variacao_educacao                        540 non-null    float64\n 13  ipca_variacao_comunicacao                     540 non-null    float64\n 14  ipca_acumulado_ano                            540 non-null    float64\n 15  ipca_acumulado_ano_alimentacao                540 non-null    float64\n 16  ipca_acumulado_ano_habitacao                  540 non-null    float64\n 17  ipca_acumulado_ano_artigos_residencia         540 non-null    float64\n 18  ipca_acumulado_ano_vestuario                  540 non-null    float64\n 19  ipca_acumulado_ano_transporte                 540 non-null    float64\n 20  ipca_acumulado_ano_saude                      540 non-null    float64\n 21  ipca_acumulado_ano_despesas_pessoais          540 non-null    float64\n 22  ipca_acumulado_ano_educacao                   540 non-null    float64\n 23  ipca_acumulado_ano_comunicacao                540 non-null    float64\n 24  ipca_acumulado_doze_meses                     540 non-null    float64\n 25  ipca_acumulado_doze_meses_alimentacao         540 non-null    float64\n 26  ipca_acumulado_doze_meses_habitacao           540 non-null    float64\n 27  ipca_acumulado_doze_meses_artigos_residencia  540 non-null    float64\n 28  ipca_acumulado_doze_meses_vestuario           540 non-null    float64\n 29  ipca_acumulado_doze_meses_transporte          540 non-null    float64\n 30  ipca_acumulado_doze_meses_saude               540 non-null    float64\n 31  ipca_acumulado_doze_meses_despesas_pessoais   540 non-null    float64\n 32  ipca_acumulado_doze_meses_educacao            540 non-null    float64\n 33  ipca_acumulado_doze_meses_comunicacao         540 non-null    float64\n 34  ipca15_variacao                               540 non-null    float64\n 35  ipca15_acumulado_ano                          540 non-null    float64\n 36  ipca15_acumulado_doze_meses                   540 non-null    float64\n 37  inpc_variacao                                 540 non-null    float64\n 38  inpc_acumulado_ano                            540 non-null    float64\n 39  inpc_acumulado_doze_meses                     540 non-null    float64\n 40  ipa_variacao                                  540 non-null    int64  \n 41  ipa_acumulado_ano                             540 non-null    int64  \n 42  incc_variacao                                 540 non-null    float64\n 43  incc_acumulado_ano                            540 non-null    float64\n 44  incc_m_variacao                               540 non-null    float64\n 45  incc_m_acumulado_ano                          540 non-null    float64\n 46  selic_meta                                    540 non-null    float64\n 47  selic_ano                                     540 non-null    float64\n 48  juros_reais                                   540 non-null    float64\n 49  salario_minimo                                540 non-null    float64\n 50  pib_valor                                     540 non-null    float64\n 51  divida_publica_pib                            540 non-null    float64\n 52  dolar_cambio                                  540 non-null    float64\n 53  consolidado_ano                               540 non-null    bool   \n 54  ipc_fipe_acumulado_ano                        521 non-null    float64\n 55  ipc_fipe_variacao                             521 non-null    float64\ndtypes: bool(1), float64(49), int64(5), object(1)\nmemory usage: 232.7+ KB\n","output_type":"stream"},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"{'info': 'None',\n 'head': {'referencia': {0: '1980-01',\n   1: '1980-02',\n   2: '1980-03',\n   3: '1980-04',\n   4: '1980-05'},\n  'ano': {0: 1980, 1: 1980, 2: 1980, 3: 1980, 4: 1980},\n  'mes': {0: 1, 1: 2, 2: 3, 3: 4, 4: 5},\n  'ano_mes': {0: 198001, 1: 198002, 2: 198003, 3: 198004, 4: 198005},\n  'ipca_variacao': {0: 6.62, 1: 4.62, 2: 6.04, 3: 5.29, 4: 5.7},\n  'ipca_variacao_alimentacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_habitacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_artigos_residencia': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_vestuario': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_transporte': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_saude': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_despesas_pessoais': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_educacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_variacao_comunicacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano': {0: 6.62, 1: 11.54, 2: 18.27, 3: 24.53, 4: 31.63},\n  'ipca_acumulado_ano_alimentacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano_habitacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano_artigos_residencia': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_ano_vestuario': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano_transporte': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano_saude': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano_despesas_pessoais': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_ano_educacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_ano_comunicacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_doze_meses': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_doze_meses_alimentacao': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_habitacao': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_artigos_residencia': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_vestuario': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_transporte': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_saude': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca_acumulado_doze_meses_despesas_pessoais': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_educacao': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca_acumulado_doze_meses_comunicacao': {0: 0.0,\n   1: 0.0,\n   2: 0.0,\n   3: 0.0,\n   4: 0.0},\n  'ipca15_variacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca15_acumulado_ano': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'ipca15_acumulado_doze_meses': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'inpc_variacao': {0: 6.56, 1: 4.15, 2: 5.12, 3: 4.85, 4: 5.53},\n  'inpc_acumulado_ano': {0: 6.56, 1: 10.98, 2: 16.67, 3: 22.33, 4: 29.1},\n  'inpc_acumulado_doze_meses': {0: 0.0, 1: 0.0, 2: 75.11, 3: 77.48, 4: 84.06},\n  'ipa_variacao': {0: 0, 1: 0, 2: 0, 3: 0, 4: 0},\n  'ipa_acumulado_ano': {0: 0, 1: 0, 2: 0, 3: 0, 4: 0},\n  'incc_variacao': {0: 4.7, 1: 9.53, 2: 12.8, 3: 3.13, 4: 4.86},\n  'incc_acumulado_ano': {0: 4.7, 1: 14.23, 2: 27.03, 3: 30.16, 4: 35.02},\n  'incc_m_variacao': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'incc_m_acumulado_ano': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'selic_meta': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'selic_ano': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'juros_reais': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'salario_minimo': {0: 1.0665e-09,\n   1: 1.0665e-09,\n   2: 1.0665e-09,\n   3: 1.0665e-09,\n   4: 1.5089e-09},\n  'pib_valor': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'divida_publica_pib': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},\n  'dolar_cambio': {0: 1.5796e-11,\n   1: 1.624e-11,\n   2: 1.6844e-11,\n   3: 1.7498e-11,\n   4: 1.8033e-11},\n  'consolidado_ano': {0: False, 1: False, 2: False, 3: False, 4: False},\n  'ipc_fipe_acumulado_ano': {0: 4.48, 1: 7.83, 2: 12.17, 3: 16.1, 4: 22.62},\n  'ipc_fipe_variacao': {0: 4.48, 1: 3.35, 2: 4.34, 3: 3.93, 4: 6.52}},\n 'desc': {'referencia': {'count': 540,\n   'unique': 540,\n   'top': '1980-01',\n   'freq': 1,\n   'mean': nan,\n   'std': nan,\n   'min': nan,\n   '25%': nan,\n   '50%': nan,\n   '75%': nan,\n   'max': nan},\n  'ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 2002.0,\n   'std': 12.999215046945515,\n   'min': 1980.0,\n   '25%': 1991.0,\n   '50%': 2002.0,\n   '75%': 2013.0,\n   'max': 2024.0},\n  'mes': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 6.5,\n   'std': 3.4552533206993785,\n   'min': 1.0,\n   '25%': 3.75,\n   '50%': 6.5,\n   '75%': 9.25,\n   'max': 12.0},\n  'ano_mes': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 200206.5,\n   'std': 1299.9260968004517,\n   'min': 198001.0,\n   '25%': 199103.75,\n   '50%': 200206.5,\n   '75%': 201309.25,\n   'max': 202412.0},\n  'ipca_variacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 5.691129629629629,\n   'std': 10.671447800789883,\n   'min': -0.68,\n   '25%': 0.37,\n   '50%': 0.735,\n   '75%': 6.612500000000001,\n   'max': 82.39},\n  'ipca_variacao_alimentacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.17424074074074072,\n   'std': 0.4847090221823597,\n   'min': -1.07,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 3.38},\n  'ipca_variacao_habitacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.1459074074074074,\n   'std': 0.523533122339185,\n   'min': -2.38,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 5.29},\n  'ipca_variacao_artigos_residencia': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.09290740740740741,\n   'std': 0.3237842549133838,\n   'min': -1.37,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 1.82},\n  'ipca_variacao_vestuario': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.10692592592592592,\n   'std': 0.36762663825164005,\n   'min': -1.15,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 2.11},\n  'ipca_variacao_transporte': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.11629629629629629,\n   'std': 0.5900828415672207,\n   'min': -4.51,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 3.81},\n  'ipca_variacao_saude': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.15285185185185185,\n   'std': 0.33387700663931175,\n   'min': -0.71,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.2125,\n   'max': 2.33},\n  'ipca_variacao_despesas_pessoais': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.14453703703703702,\n   'std': 0.31371549292241424,\n   'min': -0.31,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.1125,\n   'max': 2.23},\n  'ipca_variacao_educacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.15655555555555553,\n   'std': 0.7984063362714451,\n   'min': -3.47,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0225,\n   'max': 6.28},\n  'ipca_variacao_comunicacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.030444444444444448,\n   'std': 0.2529891552572924,\n   'min': -2.08,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 2.09},\n  'ipca_acumulado_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 92.16187037037038,\n   'std': 260.4790356069831,\n   'min': -0.16,\n   '25%': 2.435,\n   '50%': 4.955,\n   '75%': 43.925000000000004,\n   'max': 2477.15},\n  'ipca_acumulado_ano_alimentacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.2009999999999998,\n   'std': 2.608170215657032,\n   'min': -2.4,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.575,\n   'max': 14.09},\n  'ipca_acumulado_ano_habitacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.9423703703703704,\n   'std': 2.5967944296181003,\n   'min': -2.58,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 18.31},\n  'ipca_acumulado_ano_artigos_residencia': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.6108148148148149,\n   'std': 1.7600287996681698,\n   'min': -2.58,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 12.07},\n  'ipca_acumulado_ano_vestuario': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.484425925925926,\n   'std': 1.9386804427411086,\n   'min': -3.21,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 18.02},\n  'ipca_acumulado_ano_transporte': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.684814814814815,\n   'std': 2.297063173604025,\n   'min': -5.28,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 21.03},\n  'ipca_acumulado_ano_saude': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.1349814814814814,\n   'std': 2.264167721869285,\n   'min': -0.32,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.8625,\n   'max': 11.43},\n  'ipca_acumulado_ano_despesas_pessoais': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.9666666666666667,\n   'std': 2.025230099847519,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.6625000000000001,\n   'max': 10.17},\n  'ipca_acumulado_ano_educacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.599611111111111,\n   'std': 2.835517778638438,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 2.1925,\n   'max': 9.25},\n  'ipca_acumulado_ano_comunicacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.21085185185185185,\n   'std': 0.7574410196405006,\n   'min': -1.77,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 3.91},\n  'ipca_acumulado_doze_meses': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 295.94305555555553,\n   'std': 846.8689927935794,\n   'min': 0.0,\n   '25%': 4.9075,\n   '50%': 7.51,\n   '75%': 122.16499999999999,\n   'max': 6821.31},\n  'ipca_acumulado_doze_meses_alimentacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.8445555555555555,\n   'std': 4.0005073874239585,\n   'min': -2.32,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 15.0},\n  'ipca_acumulado_doze_meses_habitacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.6763148148148148,\n   'std': 3.70791825999248,\n   'min': -0.05,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 18.33},\n  'ipca_acumulado_doze_meses_artigos_residencia': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.151685185185185,\n   'std': 2.9538550536668593,\n   'min': -1.81,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 15.34},\n  'ipca_acumulado_doze_meses_vestuario': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.267462962962963,\n   'std': 3.167572425823475,\n   'min': -1.13,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 19.16},\n  'ipca_acumulado_doze_meses_transporte': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.4063333333333334,\n   'std': 3.621052220511804,\n   'min': -5.68,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 21.97},\n  'ipca_acumulado_doze_meses_saude': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.7220925925925925,\n   'std': 3.250853159138798,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 12.08},\n  'ipca_acumulado_doze_meses_despesas_pessoais': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.5521851851851853,\n   'std': 2.980045765945054,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 11.09},\n  'ipca_acumulado_doze_meses_educacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.6803518518518517,\n   'std': 3.1651220885068962,\n   'min': -1.19,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 9.37},\n  'ipca_acumulado_doze_meses_comunicacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.2937592592592593,\n   'std': 0.8223576549305217,\n   'min': -1.56,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 3.72},\n  'ipca15_variacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.2753333333333333,\n   'std': 0.38690254678020564,\n   'min': -0.73,\n   '25%': 0.0,\n   '50%': 0.1,\n   '75%': 0.49,\n   'max': 3.05},\n  'ipca15_acumulado_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.903962962962963,\n   'std': 2.3848584355131695,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.86,\n   '75%': 3.3225,\n   'max': 11.99},\n  'ipca15_acumulado_doze_meses': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 3.4334814814814814,\n   'std': 3.736483632336872,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 3.105,\n   '75%': 6.155,\n   'max': 17.24},\n  'inpc_variacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 5.678851851851853,\n   'std': 10.678001894914955,\n   'min': -0.6,\n   '25%': 0.37,\n   '50%': 0.74,\n   '75%': 6.5625,\n   'max': 82.18},\n  'inpc_acumulado_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 91.68022222222224,\n   'std': 257.7869614230477,\n   'min': 0.06,\n   '25%': 2.5575,\n   '50%': 4.945,\n   '75%': 42.1675,\n   'max': 2489.11},\n  'inpc_acumulado_doze_meses': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 295.00425925925924,\n   'std': 833.2951546560743,\n   'min': 0.0,\n   '25%': 5.005,\n   '50%': 8.18,\n   '75%': 119.2975,\n   'max': 6554.52},\n  'ipa_variacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.0,\n   'std': 0.0,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 0.0},\n  'ipa_acumulado_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 0.0,\n   'std': 0.0,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 0.0,\n   '75%': 0.0,\n   'max': 0.0},\n  'incc_variacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 5.829851844444444,\n   'std': 11.02864957404915,\n   'min': -0.5,\n   '25%': 0.33,\n   '50%': 0.845,\n   '75%': 5.32,\n   'max': 78.41},\n  'incc_acumulado_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 40.03027777777778,\n   'std': 72.58451456895096,\n   'min': 0.0,\n   '25%': 2.6075,\n   '50%': 6.26,\n   '75%': 40.7775,\n   'max': 388.77},\n  'incc_m_variacao': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 3.663722222222222,\n   'std': 10.066087191717925,\n   'min': 0.0,\n   '25%': 0.0325,\n   '50%': 0.38,\n   '75%': 0.93,\n   'max': 72.48},\n  'incc_m_acumulado_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 24.576240740740737,\n   'std': 66.23350845627932,\n   'min': 0.0,\n   '25%': 0.275,\n   '50%': 3.075,\n   '75%': 7.005,\n   'max': 376.5},\n  'selic_meta': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 8.008351851851852,\n   'std': 7.943025018447871,\n   'min': 0.0,\n   '25%': 0.0,\n   '50%': 7.5,\n   '75%': 13.75,\n   'max': 42.0},\n  'selic_ano': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1372.3486666666668,\n   'std': 19122.052033573003,\n   'min': 0.0,\n   '25%': 7.415,\n   '50%': 13.65,\n   '75%': 26.1025,\n   'max': 438898.83},\n  'juros_reais': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 46.2885,\n   'std': 510.55119188393803,\n   'min': -97.5,\n   '25%': 0.0,\n   '50%': 5.38,\n   '75%': 10.575,\n   'max': 11448.68},\n  'salario_minimo': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 382.41899376391893,\n   'std': 422.28213121910244,\n   'min': 1.0665e-09,\n   '25%': 0.01,\n   '50%': 200.0,\n   '75%': 678.0,\n   'max': 1412.0},\n  'pib_valor': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 244849.55796296295,\n   'std': 276291.9796591675,\n   'min': 0.0,\n   '25%': 2.95,\n   '50%': 124345.15,\n   '75%': 453630.4,\n   'max': 1061899.3},\n  'divida_publica_pib': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 32.83548148148148,\n   'std': 20.554748034058374,\n   'min': 0.0,\n   '25%': 28.1025,\n   '50%': 37.21,\n   '75%': 48.335,\n   'max': 62.45},\n  'dolar_cambio': {'count': 540.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 1.8608197297348819,\n   'std': 1.6985991238981808,\n   'min': 1.5796e-11,\n   '25%': 0.0001,\n   '50%': 1.7922,\n   '75%': 2.92575,\n   'max': 6.0964},\n  'consolidado_ano': {'count': 540,\n   'unique': 2,\n   'top': False,\n   'freq': 495,\n   'mean': nan,\n   'std': nan,\n   'min': nan,\n   '25%': nan,\n   '50%': nan,\n   '75%': nan,\n   'max': nan},\n  'ipc_fipe_acumulado_ano': {'count': 521.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 38.408234165067185,\n   'std': 72.43513343748742,\n   'min': -1.79,\n   '25%': 1.92,\n   '50%': 4.74,\n   '75%': 38.34,\n   'max': 374.66},\n  'ipc_fipe_variacao': {'count': 521.0,\n   'unique': nan,\n   'top': nan,\n   'freq': nan,\n   'mean': 5.725623800383877,\n   'std': 10.731443556765694,\n   'min': -1.0,\n   '25%': 0.3,\n   '50%': 0.74,\n   '75%': 6.69,\n   'max': 79.11}},\n 'correlacao_com_ipca': {'ipca_variacao': 1.0,\n  'inpc_variacao': 0.9990020358109423,\n  'ipc_fipe_variacao': 0.9937555043063502,\n  'incc_variacao': 0.9655492480495405,\n  'incc_m_variacao': 0.8493709945426182,\n  'incc_acumulado_ano': 0.7102902193087846,\n  'ipc_fipe_acumulado_ano': 0.6872519872337769,\n  'inpc_acumulado_doze_meses': 0.6779321325810538,\n  'ipca_acumulado_doze_meses': 0.674756453576015,\n  'ipca_acumulado_ano': 0.5698810521872943,\n  'inpc_acumulado_ano': 0.5682725711547878,\n  'incc_m_acumulado_ano': 0.5527033311527082,\n  'juros_reais': 0.4074094005531483,\n  'selic_ano': 0.377059767750619,\n  'consolidado_ano': 0.02052463278177189,\n  'mes': -0.03571973534222347,\n  'ipca_variacao_comunicacao': -0.054810791423232606,\n  'ipca_variacao_transporte': -0.08347023930143171,\n  'ipca_variacao_educacao': -0.09280455863752013,\n  'ipca_acumulado_ano_vestuario': -0.12203072622239536,\n  'ipca_variacao_habitacao': -0.1296727265906989,\n  'ipca_variacao_artigos_residencia': -0.13364761178967977,\n  'ipca_acumulado_ano_comunicacao': -0.13668093498771228,\n  'ipca_variacao_vestuario': -0.13903944770649804,\n  'ipca_acumulado_ano_transporte': -0.13976013855725614,\n  'ipca_acumulado_ano_artigos_residencia': -0.16598737263238844,\n  'ipca_variacao_alimentacao': -0.16668752225229197,\n  'ipca_acumulado_ano_habitacao': -0.17337565384505838,\n  'ipca_acumulado_doze_meses_comunicacao': -0.1744087426533522,\n  'ipca_acumulado_doze_meses_transporte': -0.18480505158552024,\n  'ipca_acumulado_doze_meses_artigos_residencia': -0.18636714817871533,\n  'ipca_acumulado_doze_meses_vestuario': -0.19492606214405564,\n  'ipca_acumulado_doze_meses_habitacao': -0.21510830821791155,\n  'ipca_acumulado_doze_meses_alimentacao': -0.22153340030955176,\n  'ipca_variacao_despesas_pessoais': -0.22203840135505176,\n  'ipca_variacao_saude': -0.22204402299110357,\n  'ipca_acumulado_ano_alimentacao': -0.22286699345498004,\n  'ipca_acumulado_ano_despesas_pessoais': -0.23334147995455917,\n  'ipca_acumulado_ano_saude': -0.24736868268115142,\n  'ipca_acumulado_doze_meses_despesas_pessoais': -0.2536246461660994,\n  'ipca_acumulado_doze_meses_saude': -0.2596875769679553,\n  'ipca_acumulado_doze_meses_educacao': -0.2599853172172815,\n  'ipca_acumulado_ano_educacao': -0.2776828197476836,\n  'ipca15_variacao': -0.3286834265590153,\n  'ipca15_acumulado_ano': -0.3845681947786697,\n  'pib_valor': -0.43036555038880303,\n  'salario_minimo': -0.4394525994389067,\n  'ipca15_acumulado_doze_meses': -0.44201187217016064,\n  'divida_publica_pib': -0.44838242341051315,\n  'ano': -0.48228347980180813,\n  'ano_mes': -0.4823767205157703,\n  'selic_meta': -0.48902774226933404,\n  'dolar_cambio': -0.5178513835723431,\n  'ipa_variacao': nan,\n  'ipa_acumulado_ano': nan},\n 'colunas': ['referencia',\n  'ano',\n  'mes',\n  'ano_mes',\n  'ipca_variacao',\n  'ipca_variacao_alimentacao',\n  'ipca_variacao_habitacao',\n  'ipca_variacao_artigos_residencia',\n  'ipca_variacao_vestuario',\n  'ipca_variacao_transporte',\n  'ipca_variacao_saude',\n  'ipca_variacao_despesas_pessoais',\n  'ipca_variacao_educacao',\n  'ipca_variacao_comunicacao',\n  'ipca_acumulado_ano',\n  'ipca_acumulado_ano_alimentacao',\n  'ipca_acumulado_ano_habitacao',\n  'ipca_acumulado_ano_artigos_residencia',\n  'ipca_acumulado_ano_vestuario',\n  'ipca_acumulado_ano_transporte',\n  'ipca_acumulado_ano_saude',\n  'ipca_acumulado_ano_despesas_pessoais',\n  'ipca_acumulado_ano_educacao',\n  'ipca_acumulado_ano_comunicacao',\n  'ipca_acumulado_doze_meses',\n  'ipca_acumulado_doze_meses_alimentacao',\n  'ipca_acumulado_doze_meses_habitacao',\n  'ipca_acumulado_doze_meses_artigos_residencia',\n  'ipca_acumulado_doze_meses_vestuario',\n  'ipca_acumulado_doze_meses_transporte',\n  'ipca_acumulado_doze_meses_saude',\n  'ipca_acumulado_doze_meses_despesas_pessoais',\n  'ipca_acumulado_doze_meses_educacao',\n  'ipca_acumulado_doze_meses_comunicacao',\n  'ipca15_variacao',\n  'ipca15_acumulado_ano',\n  'ipca15_acumulado_doze_meses',\n  'inpc_variacao',\n  'inpc_acumulado_ano',\n  'inpc_acumulado_doze_meses',\n  'ipa_variacao',\n  'ipa_acumulado_ano',\n  'incc_variacao',\n  'incc_acumulado_ano',\n  'incc_m_variacao',\n  'incc_m_acumulado_ano',\n  'selic_meta',\n  'selic_ano',\n  'juros_reais',\n  'salario_minimo',\n  'pib_valor',\n  'divida_publica_pib',\n  'dolar_cambio',\n  'consolidado_ano',\n  'ipc_fipe_acumulado_ano',\n  'ipc_fipe_variacao']}"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Carregar os dados\ndf = pd.read_csv('/kaggle/input/inflacao-2024/inflacao-2024.csv')\n\n# Antes de calcular a matriz de correlação\ndf_num = df.select_dtypes(include=['float64', 'int64']).replace([np.inf, -np.inf], np.nan).dropna(axis=0, how='any')\n\n# Selecionar apenas variáveis numéricas para correlação\ndf_num = df.select_dtypes(include=['float64', 'int64'])\n\n# Calcular a matriz de correlação\ncorr_matrix = df_num.corr()\n\n# Configurar o tamanho da figura\nplt.figure(figsize=(16, 14))\n\n# Criar um mapa de calor (heatmap) da matriz de correlação\nmask = np.triu(np.ones_like(corr_matrix, dtype=bool))  # Máscara para mostrar apenas metade do heatmap\nsns.heatmap(corr_matrix, mask=mask, annot=False, cmap='coolwarm', vmin=-1, vmax=1, \n            linewidths=0.5, cbar_kws={\"shrink\": .8})\nplt.title('Matriz de Correlação das Variáveis', fontsize=16)\nplt.tight_layout()\nplt.savefig('correlacao_matriz.png')\nplt.close()\n\n# Correlação com a variável alvo (ipca_variacao)\ncorr_with_ipca = corr_matrix['ipca_variacao'].sort_values(ascending=False)\n\n# Plotar as correlações com o IPCA\nplt.figure(figsize=(12, 10))\ncorr_with_ipca.drop('ipca_variacao').plot(kind='barh', color=plt.cm.coolwarm(np.linspace(0, 1, len(corr_with_ipca)-1)))\nplt.title('Correlação das Variáveis com IPCA (Variação)', fontsize=16)\nplt.axvline(x=0, color='black', linestyle='-', alpha=0.3)\nplt.grid(axis='x', alpha=0.3)\nplt.tight_layout()\nplt.savefig('correlacao_com_ipca.png')\nplt.close()\n\n# Análise de correlação com defasagens (lags)\n# Criar variáveis defasadas para o IPCA\nfor lag in range(1, 13):  # Defasagens de 1 a 12 meses\n    df[f'ipca_lag_{lag}'] = df['ipca_variacao'].shift(lag)\n\n# Remover linhas com NaN (primeiros 12 meses)\ndf_lags = df.iloc[12:].copy()\n\n# Calcular correlação entre IPCA atual e seus valores defasados\nlag_corrs = []\nfor i in range(1, 13):\n    lag_corrs.append(df_lags['ipca_variacao'].corr(df_lags[f'ipca_lag_{i}']))\n\n# Plotar correlação com defasagens\nplt.figure(figsize=(12, 6))\nlag_corr = pd.Series(data=lag_corrs, index=range(1, 13))\nlag_corr.plot(kind='bar', color=plt.cm.coolwarm(np.linspace(0, 1, len(lag_corr))))\nplt.title('Autocorrelação do IPCA com Defasagens (Lags)', fontsize=16)\nplt.xlabel('Defasagem (meses)', fontsize=12)\nplt.ylabel('Correlação', fontsize=12)\nplt.grid(axis='y', alpha=0.3)\nplt.tight_layout()\nplt.savefig('autocorrelacao_ipca.png')\nplt.close()\n\n# Análise de correlação cruzada entre IPCA e outras variáveis importantes\nimportant_vars = ['inpc_variacao', 'ipa_variacao', 'ipc_fipe_variacao', 'selic_meta', 'juros_reais']\ncross_corr = {}\n\nfor var in important_vars:\n    cross_corr[var] = []\n    for lag in range(-6, 7):  # Defasagens de -6 a 6 meses\n        if lag < 0:\n            # Variável defasada (passado afeta presente)\n            shifted_var = df[var].shift(-lag)\n            valid_idx = ~(df['ipca_variacao'].isna() | shifted_var.isna())\n            if valid_idx.sum() > 0:\n                corr = df.loc[valid_idx, 'ipca_variacao'].corr(shifted_var[valid_idx])\n            else:\n                corr = np.nan\n        elif lag > 0:\n            # IPCA defasado (presente afeta futuro)\n            shifted_ipca = df['ipca_variacao'].shift(lag)\n            valid_idx = ~(shifted_ipca.isna() | df[var].isna())\n            if valid_idx.sum() > 0:\n                corr = shifted_ipca[valid_idx].corr(df.loc[valid_idx, var])\n            else:\n                corr = np.nan\n        else:\n            # Contemporâneo\n            valid_idx = ~(df['ipca_variacao'].isna() | df[var].isna())\n            if valid_idx.sum() > 0:\n                corr = df.loc[valid_idx, 'ipca_variacao'].corr(df.loc[valid_idx, var])\n            else:\n                corr = np.nan\n        cross_corr[var].append(corr)\n\n# Plotar correlação cruzada\nplt.figure(figsize=(14, 8))\nfor var, corrs in cross_corr.items():\n    plt.plot(range(-6, 7), corrs, marker='o', label=var)\nplt.axvline(x=0, color='black', linestyle='--', alpha=0.3)\nplt.axhline(y=0, color='black', linestyle='-', alpha=0.3)\nplt.title('Correlação Cruzada entre IPCA e Variáveis Selecionadas', fontsize=16)\nplt.xlabel('Defasagem (meses): Negativo = Variável defasada, Positivo = IPCA defasado', fontsize=12)\nplt.ylabel('Correlação', fontsize=12)\nplt.grid(alpha=0.3)\nplt.legend()\nplt.tight_layout()\nplt.savefig('correlacao_cruzada.png')\nplt.close()\n\n# Retornar os resultados\n{\n    'correlacao_com_ipca': corr_with_ipca.to_dict(),\n    'autocorrelacao_ipca': lag_corr.to_dict(),\n    'correlacao_cruzada': {var: dict(zip(range(-6, 7), vals)) for var, vals in cross_corr.items()}\n}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:40:32.13607Z","iopub.execute_input":"2025-05-30T17:40:32.136381Z","iopub.status.idle":"2025-05-30T17:40:34.901958Z","shell.execute_reply.started":"2025-05-30T17:40:32.136358Z","shell.execute_reply":"2025-05-30T17:40:34.900465Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/matplotlib/colors.py:721: RuntimeWarning: invalid value encountered in less\n  xa[xa < 0] = -1\n/usr/local/lib/python3.11/dist-packages/numpy/lib/function_base.py:2897: RuntimeWarning: invalid value encountered in divide\n  c /= stddev[:, None]\n/usr/local/lib/python3.11/dist-packages/numpy/lib/function_base.py:2898: RuntimeWarning: invalid value encountered in divide\n  c /= stddev[None, :]\n","output_type":"stream"},{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"{'correlacao_com_ipca': {'ipca_variacao': 1.0,\n  'inpc_variacao': 0.9990020358109423,\n  'ipc_fipe_variacao': 0.9937555043063502,\n  'incc_variacao': 0.9655492480495405,\n  'incc_m_variacao': 0.8493709945426182,\n  'incc_acumulado_ano': 0.7102902193087846,\n  'ipc_fipe_acumulado_ano': 0.6872519872337769,\n  'inpc_acumulado_doze_meses': 0.6779321325810538,\n  'ipca_acumulado_doze_meses': 0.674756453576015,\n  'ipca_acumulado_ano': 0.5698810521872943,\n  'inpc_acumulado_ano': 0.5682725711547878,\n  'incc_m_acumulado_ano': 0.5527033311527082,\n  'juros_reais': 0.4074094005531483,\n  'selic_ano': 0.377059767750619,\n  'mes': -0.03571973534222347,\n  'ipca_variacao_comunicacao': -0.054810791423232606,\n  'ipca_variacao_transporte': -0.08347023930143171,\n  'ipca_variacao_educacao': -0.09280455863752013,\n  'ipca_acumulado_ano_vestuario': -0.12203072622239536,\n  'ipca_variacao_habitacao': -0.1296727265906989,\n  'ipca_variacao_artigos_residencia': -0.13364761178967977,\n  'ipca_acumulado_ano_comunicacao': -0.13668093498771228,\n  'ipca_variacao_vestuario': -0.13903944770649804,\n  'ipca_acumulado_ano_transporte': -0.13976013855725614,\n  'ipca_acumulado_ano_artigos_residencia': -0.16598737263238844,\n  'ipca_variacao_alimentacao': -0.16668752225229197,\n  'ipca_acumulado_ano_habitacao': -0.17337565384505838,\n  'ipca_acumulado_doze_meses_comunicacao': -0.1744087426533522,\n  'ipca_acumulado_doze_meses_transporte': -0.18480505158552024,\n  'ipca_acumulado_doze_meses_artigos_residencia': -0.18636714817871533,\n  'ipca_acumulado_doze_meses_vestuario': -0.19492606214405564,\n  'ipca_acumulado_doze_meses_habitacao': -0.21510830821791155,\n  'ipca_acumulado_doze_meses_alimentacao': -0.22153340030955176,\n  'ipca_variacao_despesas_pessoais': -0.22203840135505176,\n  'ipca_variacao_saude': -0.22204402299110357,\n  'ipca_acumulado_ano_alimentacao': -0.22286699345498004,\n  'ipca_acumulado_ano_despesas_pessoais': -0.23334147995455917,\n  'ipca_acumulado_ano_saude': -0.24736868268115142,\n  'ipca_acumulado_doze_meses_despesas_pessoais': -0.2536246461660994,\n  'ipca_acumulado_doze_meses_saude': -0.2596875769679553,\n  'ipca_acumulado_doze_meses_educacao': -0.2599853172172815,\n  'ipca_acumulado_ano_educacao': -0.2776828197476836,\n  'ipca15_variacao': -0.3286834265590153,\n  'ipca15_acumulado_ano': -0.3845681947786697,\n  'pib_valor': -0.43036555038880303,\n  'salario_minimo': -0.4394525994389067,\n  'ipca15_acumulado_doze_meses': -0.44201187217016064,\n  'divida_publica_pib': -0.44838242341051315,\n  'ano': -0.48228347980180813,\n  'ano_mes': -0.4823767205157703,\n  'selic_meta': -0.48902774226933404,\n  'dolar_cambio': -0.5178513835723431,\n  'ipa_variacao': nan,\n  'ipa_acumulado_ano': nan},\n 'autocorrelacao_ipca': {1: 0.9302506286998152,\n  2: 0.8492461831709883,\n  3: 0.7817596555158532,\n  4: 0.736152013242947,\n  5: 0.6977713471885859,\n  6: 0.6634972507736895,\n  7: 0.6346389200750653,\n  8: 0.6113235826746375,\n  9: 0.5974393887371223,\n  10: 0.5852803540361624,\n  11: 0.5844419936699137,\n  12: 0.5896234573086848},\n 'correlacao_cruzada': {'inpc_variacao': {-6: 0.6590610049165908,\n   -5: 0.6924743435518698,\n   -4: 0.7330312736039115,\n   -3: 0.7806649736584332,\n   -2: 0.8500524855416269,\n   -1: 0.9284870104523418,\n   0: 0.999002035810942,\n   1: 0.9295391516611047,\n   2: 0.8476536076804218,\n   3: 0.7793628766720821,\n   4: 0.7334075485639233,\n   5: 0.6955074837544537,\n   6: 0.6602706480175718},\n  'ipa_variacao': {-6: nan,\n   -5: nan,\n   -4: nan,\n   -3: nan,\n   -2: nan,\n   -1: nan,\n   0: nan,\n   1: nan,\n   2: nan,\n   3: nan,\n   4: nan,\n   5: nan,\n   6: nan},\n  'ipc_fipe_variacao': {-6: 0.6542976810848481,\n   -5: 0.6842216382842938,\n   -4: 0.7186433421890677,\n   -3: 0.7694989652022755,\n   -2: 0.8481204082930701,\n   -1: 0.9265574553351686,\n   0: 0.9937555043063497,\n   1: 0.9306899571747351,\n   2: 0.8515764696485053,\n   3: 0.7836373923643898,\n   4: 0.7353517753854205,\n   5: 0.6949736267530024,\n   6: 0.6581075212104147},\n  'selic_meta': {-6: -0.4853523982115717,\n   -5: -0.486098594673934,\n   -4: -0.4867502959649948,\n   -3: -0.4875274748728594,\n   -2: -0.4882693276757398,\n   -1: -0.4883614976959034,\n   0: -0.4890277422693338,\n   1: -0.49012613878739497,\n   2: -0.49152853289174925,\n   3: -0.4932836086104207,\n   4: -0.4952788865787093,\n   5: -0.49679390999278283,\n   6: -0.49822125455824456},\n  'juros_reais': {-6: 0.07943519271841339,\n   -5: 0.09102069990642885,\n   -4: 0.11013098716755647,\n   -3: 0.15048496087903931,\n   -2: 0.20664475532089893,\n   -1: 0.45346548476064263,\n   0: 0.40740940055314856,\n   1: 0.3559745727097797,\n   2: 0.27333051445522794,\n   3: 0.2431642665618039,\n   4: 0.197752472275107,\n   5: 0.17465568289026037,\n   6: 0.14876957378848238}}}"},"metadata":{}}],"execution_count":18},{"cell_type":"markdown","source":"![autocorrelacao_ipca.png](attachment:782a0be7-9460-4259-ab51-364eadd8ab5c.png)","metadata":{},"attachments":{"782a0be7-9460-4259-ab51-364eadd8ab5c.png":{"image/png":""}}},{"cell_type":"markdown","source":"![correlacao_com_ipca.png](attachment:2c9b05a7-4673-467f-85f6-73c7edafb45a.png)","metadata":{},"attachments":{"2c9b05a7-4673-467f-85f6-73c7edafb45a.png":{"image/png":""}}},{"cell_type":"markdown","source":"![correlacao_cruzada.png](attachment:97672d9c-1a67-4382-b9bb-7907a3fddc7e.png)","metadata":{},"attachments":{"97672d9c-1a67-4382-b9bb-7907a3fddc7e.png":{"image/png":""}}},{"cell_type":"markdown","source":"![correlacao_matriz.png](attachment:686a6330-8978-4e9b-8c1d-fab83371eb6d.png)","metadata":{},"attachments":{"686a6330-8978-4e9b-8c1d-fab83371eb6d.png":{"image/png":""}}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Carregar os dados\ndf = pd.read_csv('/kaggle/input/inflacao-2024/inflacao.csv')\n\n# Verificar o período dos dados\nprint(f\"Período dos dados: {df['referencia'].min()} a {df['referencia'].max()}\")\n\n# Análise exploratória básica\nprint(\"\\nEstatísticas descritivas do IPCA:\")\nprint(df['ipca_variacao'].describe())\n\n# Criar variáveis de incerteza\n# 1. Volatilidade do IPCA (desvio padrão móvel)\nwindow_size = 12\ndf['ipca_volatilidade'] = df['ipca_variacao'].rolling(window=window_size).std()\n\n# 2. Dispersão entre diferentes índices de inflação\nindices = ['ipca_variacao', 'inpc_variacao', 'ipa_variacao', 'ipc_fipe_variacao', 'incc_variacao']\ndf['dispersao_indices'] = df[indices].std(axis=1)\n\n# 3. Diferença entre expectativa e realização (quando disponível)\n# Criar defasagens do IPCA para análise de autocorrelação\nfor i in range(1, 13):\n    df[f'ipca_lag_{i}'] = df['ipca_variacao'].shift(i)\n\n# Criar variáveis de choques externos\n# 1. Variação absoluta do IPCA\ndf['ipca_var_abs'] = df['ipca_variacao'].diff().abs()\n\n# Visualizar a evolução da inflação e medidas de incerteza\nplt.figure(figsize=(12, 8))\nplt.subplot(3, 1, 1)\nplt.plot(df['referencia'], df['ipca_variacao'], label='IPCA Mensal')\nplt.title('Evolução do IPCA Mensal')\nplt.xticks(rotation=45)\nplt.legend()\n\nplt.subplot(3, 1, 2)\nplt.plot(df['referencia'], df['ipca_volatilidade'], label='Volatilidade do IPCA (12 meses)')\nplt.title('Volatilidade do IPCA')\nplt.xticks(rotation=45)\nplt.legend()\n\nplt.subplot(3, 1, 3)\nplt.plot(df['referencia'], df['dispersao_indices'], label='Dispersão entre Índices')\nplt.title('Dispersão entre Diferentes Índices de Inflação')\nplt.xticks(rotation=45)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('inflacao_incerteza.png')\nplt.close()\n\n# Analisar correlação entre IPCA e medidas de incerteza\n# Remover NaN para cálculo de correlação\ndf_corr = df.dropna(subset=['ipca_volatilidade', 'dispersao_indices'])\n\n# Calcular correlação\ncorr_volatilidade = df_corr['ipca_variacao'].corr(df_corr['ipca_volatilidade'])\ncorr_dispersao = df_corr['ipca_variacao'].corr(df_corr['dispersao_indices'])\n\nprint(f\"\\nCorrelação entre IPCA e sua volatilidade: {corr_volatilidade:.4f}\")\nprint(f\"Correlação entre IPCA e dispersão entre índices: {corr_dispersao:.4f}\")\n\n# Analisar autocorrelação do IPCA\nlag_cols = [f'ipca_lag_{i}' for i in range(1, 13)]\nautocorr = [df['ipca_variacao'].corr(df[col]) for col in lag_cols]\n\nplt.figure(figsize=(10, 6))\nplt.bar(range(1, 13), autocorr)\nplt.title('Autocorrelação do IPCA')\nplt.xlabel('Defasagem (meses)')\nplt.ylabel('Correlação')\nplt.grid(alpha=0.3)\nplt.savefig('autocorrelacao_ipca.png')\nplt.close()\n\n# Analisar relação entre IPCA e taxa Selic\nplt.figure(figsize=(12, 6))\nplt.plot(df['referencia'], df['ipca_variacao'], label='IPCA Mensal')\nplt.plot(df['referencia'], df['selic_meta'], label='Selic Meta')\nplt.title('IPCA vs Selic Meta')\nplt.xticks(rotation=45)\nplt.legend()\nplt.grid(alpha=0.3)\nplt.savefig('ipca_vs_selic.png')\nplt.close()\n\n# Identificar períodos de alta incerteza\n# Definir alta volatilidade como períodos acima do percentil 75\nvolatilidade_threshold = df['ipca_volatilidade'].quantile(0.75)\ndf['alta_volatilidade'] = df['ipca_volatilidade'] > volatilidade_threshold\n\n# Comparar previsibilidade em períodos de alta e baixa volatilidade\n# Usar autocorrelação como proxy para previsibilidade\ndf_alta_vol = df[df['alta_volatilidade'] == True].dropna(subset=['ipca_lag_1'])\ndf_baixa_vol = df[df['alta_volatilidade'] == False].dropna(subset=['ipca_lag_1'])\n\nautocorr_alta_vol = df_alta_vol['ipca_variacao'].corr(df_alta_vol['ipca_lag_1'])\nautocorr_baixa_vol = df_baixa_vol['ipca_variacao'].corr(df_baixa_vol['ipca_lag_1'])\n\nprint(f\"\\nAutocorrelação em períodos de alta volatilidade: {autocorr_alta_vol:.4f}\")\nprint(f\"Autocorrelação em períodos de baixa volatilidade: {autocorr_baixa_vol:.4f}\")\n\n# Retornar resultados\nresultados = {\n    'periodo': f\"{df['referencia'].min()} a {df['referencia'].max()}\",\n    'estatisticas_ipca': df['ipca_variacao'].describe().to_dict(),\n    'correlacao_volatilidade': corr_volatilidade,\n    'correlacao_dispersao': corr_dispersao,\n    'autocorrelacao': dict(zip(range(1, 13), autocorr)),\n    'autocorr_alta_vol': autocorr_alta_vol,\n    'autocorr_baixa_vol': autocorr_baixa_vol\n}\n\nresultados","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-30T17:08:07.604321Z","iopub.execute_input":"2025-05-30T17:08:07.604651Z","iopub.status.idle":"2025-05-30T17:08:07.646239Z","shell.execute_reply.started":"2025-05-30T17:08:07.604621Z","shell.execute_reply":"2025-05-30T17:08:07.644637Z"}},"outputs":[{"name":"stdout","text":"Período dos dados: 1980-01 a 2024-12\n\nEstatísticas descritivas do IPCA:\ncount    540.000000\nmean       5.691130\nstd       10.671448\nmin       -0.680000\n25%        0.370000\n50%        0.735000\n75%        6.612500\nmax       82.390000\nName: ipca_variacao, dtype: float64\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_35/1405391756.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;31m# 2. Dispersão entre diferentes índices de inflação\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0mindices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'ipca_variacao'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'inpc_variacao'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'ipa_variacao'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'ipc_fipe_acumulado'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'incc_variacao'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'dispersao_indices'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindices\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;31m# 3. Diferença entre expectativa e realização (quando disponível)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4106\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4107\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4108\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_indexer_strict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4110\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   6198\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6200\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_if_missing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6201\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6202\u001b[0m         \u001b[0mkeyarr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   6250\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6251\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6252\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{not_found} not in index\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6253\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6254\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0moverload\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['ipc_fipe_acumulado'] not in index\""],"ename":"KeyError","evalue":"\"['ipc_fipe_acumulado'] not in index\"","output_type":"error"}],"execution_count":7}]}